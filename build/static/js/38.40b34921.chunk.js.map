{"version":3,"sources":["app/EgretLayout/Layout2/Layout2Navbar.jsx","app/EgretLayout/Layout2/Layout2Sidenav.jsx","app/EgretLayout/Layout2/Layout2Topbar.jsx","app/EgretLayout/Layout2/Layout2.jsx"],"names":["ViewEgretHorizontalNav","withTranslation","EgretHorizontalNav","withStyles","withTheme","connect","state","settings","layout","Component","constructor","super","arguments","this","render","theme","props","navbarTheme","themes","layout2Settings","navbar","React","createElement","MuiThemeProvider","Helmet","concat","palette","primary","contrastText","main","dark","className","navigation","navigations","max","withRouter","setDefaultSettings","PropTypes","func","isRequired","setLayoutSettings","sidenavToggleChecked","updateSidebarMode","sidebarSettings","_objectSpread","leftSidebar","componentWillMount","unlistenRouteChange","history","listen","location","action","isMobile","mode","componentWillUnmount","sidenavTheme","SidenavTheme","Brand","Sidenav","ViewLanguageSelect","LanguageSelect","logoutUser","handleSignOut","handleSidebarToggle","topbarTheme","topbar","divider","src","ConstantList","ROOT_PATH","alt","EgretToolbarMenu","offsetTop","EgretSearchBox","NotificationBar","ShoppingCart","EgretMenu","menuButton","MenuItem","style","minWidth","Icon","onClick","Hidden","mdUp","IconButton","backgroundColor","background","default","color","text","classes","layoutClasses","[object Object]","activeLayout","AppContext","Consumer","_ref","routes","Fragment","classList","show","Layout2Topbar","smDown","Layout2Navbar","Layout2Sidenav","perfectScrollbar","options","suppressScrollX","renderRoutes","footer","fixed","Footer","secondarySidebar","SecondarySidebar"],"mappings":"2NAQA,MAAMA,EAAyBC,cAAkBC,KA4ClCC,kBAAW,GAAI,CAAEC,WAAW,GAA5BD,CACbE,YALsBC,IAAK,CAC3BC,SAAUD,EAAME,OAAOD,WAMrB,GAFFF,CA5CF,cAA4BI,YAAUC,cAAAC,SAAAC,WAAAC,KACpCP,MAAQ,GACRQ,SACE,IAAIC,MAAEA,EAAKR,SAAEA,GAAaM,KAAKG,MAC/B,MAAMC,EACJV,EAASW,OAAOX,EAASY,gBAAgBC,OAAOL,QAAUA,EAC5D,OACEM,IAAAC,cAACC,IAAgB,CAACR,MAAOE,GACvBI,IAAAC,cAACE,SAAM,KACLH,IAAAC,cAAA,mGAAAG,OAGeR,EAAYS,QAAQC,QAAQC,aAAY,mHAAAH,OAInCR,EAAYS,QAAQC,QAAQE,KAAI,wJAAAJ,OAIhCR,EAAYS,QAAQC,QAAQG,KAAI,sCAKtDT,IAAAC,cAAA,OAAKS,UAAU,UACbV,IAAAC,cAAA,OAAKS,UAAU,aACbV,IAAAC,cAACtB,EAAsB,CAACgC,WAAYC,IAAaC,IAAK,mFCwCnD/B,kBAAW,GAAI,CAAEC,WAAW,GAA5BD,CACbgC,YACE9B,YARoBC,IAAK,CAC3B8B,mBAAoBC,IAAUC,KAAKC,WACnCC,kBAAmBH,IAAUC,KAAKC,WAClChC,SAAUD,EAAME,OAAOD,WAOnB,CACEiC,sBACAJ,wBAJJ/B,CAhEJ,cAA6BI,YAAUC,cAAAC,SAAAC,WAAAC,KACrCP,MAAQ,CACNmC,sBAAsB,GACvB5B,KAeD6B,kBAAoBC,KAClB,IAAIpC,SAAEA,EAAQiC,kBAAEA,GAAsB3B,KAAKG,MAC3CwB,EAAiBI,wBAAA,GACZrC,GAAQ,IACXY,gBAAeyB,wBAAA,GACVrC,EAASY,iBAAe,IAC3B0B,YAAWD,wBAAA,GACNrC,EAASY,gBAAgB0B,aACzBF,UArBXG,qBAEEjC,KAAKkC,oBAAsBlC,KAAKG,MAAMgC,QAAQC,OAAO,CAACC,EAAUC,KAC1DC,eACFvC,KAAK6B,kBAAkB,CAAEW,KAAM,YAKrCC,uBACEzC,KAAKkC,sBAiBPjC,SACE,IAAIC,MAAEA,EAAKR,SAAEA,GAAaM,KAAKG,MAC/B,MAAMuC,EACJhD,EAASW,OAAOX,EAASY,gBAAgB0B,YAAY9B,QAAUA,EACjE,OACEM,IAAAC,cAACC,IAAgB,CAACR,MAAOwC,GACvBlC,IAAAC,cAACkC,IAAY,CAACzC,MAAOwC,EAAchD,SAAUA,IAC7Cc,IAAAC,cAAA,OAAKS,UAAU,WACbV,IAAAC,cAAA,OAAKS,UAAU,iBACbV,IAAAC,cAACmC,IAAK,MACNpC,IAAAC,cAACoC,IAAO,mGClCpB,MAAMC,EAAqB1D,cAAkB2D,KA6H9BzD,kBAAW,GAAI,CAAEC,WAAW,GAA5BD,CACbE,YAPsBC,IAAK,CAC3BkC,kBAAmBH,YAAUC,KAAKC,WAClCsB,WAAYxB,YAAUC,KAAKC,WAC3BhC,SAAUD,EAAME,OAAOD,WAMrB,CAAEiC,sBAAmBqB,gBAFvBxD,CA7HF,cAA4BI,YAAUC,cAAAC,SAAAC,WAAAC,KACpCP,MAAQ,GAAEO,KAEViD,cAAgB,MAAOjD,KAAKG,MAAM6C,eAAchD,KAEhD6B,kBAAoBC,KAClB,IAAIpC,SAAEA,EAAQiC,kBAAEA,GAAsB3B,KAAKG,MAE3CwB,EAAiBI,wBAAA,GACZrC,GAAQ,IACXY,gBAAeyB,wBAAA,GACVrC,EAASY,iBAAe,IAC3B0B,YAAWD,wBAAA,GACNrC,EAASY,gBAAgB0B,aACzBF,UAIV9B,KAEDkD,oBAAsB,MACpB,IAAIxD,SAAEA,GAAaM,KAAKG,OACpBG,gBAAEA,GAAoBZ,EAEtB8C,EACmC,UAArClC,EAAgB0B,YAAYQ,KAAmB,SAAW,QAE5DxC,KAAK6B,kBAAkB,CAAEW,WAG3BvC,SACE,IAAIC,MAAEA,EAAKR,SAAEA,GAAaM,KAAKG,MAC/B,MAAMgD,EACJzD,EAASW,OAAOX,EAASY,gBAAgB8C,OAAOlD,QAAUA,EAC5D,OACEM,IAAAC,cAACC,IAAgB,CAACR,MAAOiD,GACvB3C,IAAAC,cAACE,SAAM,KACLH,IAAAC,cAAA,2DAAAG,OAEwBuC,EAAYtC,QAAQC,QAAQE,KAAI,mCAAAJ,OACpCuC,EAAYtC,QAAQwC,QAAO,0FAAAzC,OAGlCuC,EAAYtC,QAAQC,QAAQC,aAAY,oCAMvDP,IAAAC,cAAA,OAAKS,UAAU,UACbV,IAAAC,cAAA,OAAKS,UAAU,uDACbV,IAAAC,cAAA,OAAKS,UAAU,0BACbV,IAAAC,cAAA,OAAK6C,IAAKC,IAAaC,UAAU,yBAA0BC,IAAI,iBAC/DjD,IAAAC,cAAA,QAAMS,UAAU,eAAc,UAEhCV,IAAAC,cAAA,OAAKS,UAAU,YACfV,IAAAC,cAAA,OAAKS,UAAU,oBACbV,IAAAC,cAACiD,IAAgB,CAACC,UAAU,QAC1BnD,IAAAC,cAACqC,EAAkB,MACnBtC,IAAAC,cAACmD,IAAc,MAEfpD,IAAAC,cAACoD,IAAe,MAEhBrD,IAAAC,cAACqD,IAAY,MAEbtD,IAAAC,cAACsD,IAAS,CACRC,WACExD,IAAAC,cAAA,OACES,UAAU,uDACVoC,IAAKC,IAAaC,UAAW,2BAC7BC,IAAI,UAIRjD,IAAAC,cAACwD,IAAQ,CACP/C,UAAU,mBACVgD,MAAO,CAAEC,SAAU,MAEnB3D,IAAAC,cAAC2D,IAAI,KAAC,UACN5D,IAAAC,cAAA,QAAMS,UAAU,SAAQ,WAE1BV,IAAAC,cAACwD,IAAQ,CACP/C,UAAU,mBACVgD,MAAO,CAAEC,SAAU,MAEnB3D,IAAAC,cAAC2D,IAAI,KAAC,YACN5D,IAAAC,cAAA,QAAMS,UAAU,SAAQ,aAE1BV,IAAAC,cAACwD,IAAQ,CACPI,QAASrE,KAAKiD,cACd/B,UAAU,mBACVgD,MAAO,CAAEC,SAAU,MAEnB3D,IAAAC,cAAC2D,IAAI,KAAC,wBACN5D,IAAAC,cAAA,QAAMS,UAAU,SAAQ,eAK9BV,IAAAC,cAAC6D,IAAM,CAACC,MAAI,GACV/D,IAAAC,cAAC+D,IAAU,CAACH,QAASrE,KAAKkD,qBACxB1C,IAAAC,cAAC2D,IAAI,KAAC,wDCFT9E,sBAzGAY,IACN,CACLP,OAAQ,CACN8E,gBAAiBvE,EAAMW,QAAQ6D,WAAWC,QAC1CC,MAAO1E,EAAMW,QAAQgE,KAAK/D,WAqGE,CAAEvB,WAAW,GAAhCD,CACbE,YANsBC,IAAK,CAC3BkC,kBAAmBH,YAAUC,KAAKC,WAClChC,SAAUD,EAAME,OAAOD,WAMrB,CAAEiC,uBAFJnC,CAjGF,cAAsBI,YAAUC,cAAAC,SAAAC,WAAAC,KAC9BP,MAAQ,GAAEO,KACV6B,kBAAoBC,KAClB,IAAIpC,SAAEA,EAAQiC,kBAAEA,GAAsB3B,KAAKG,MAC3CwB,EAAiBI,wBAAA,GACZrC,GAAQ,IACXY,gBAAeyB,wBAAA,GACVrC,EAASY,iBAAe,IAC3B0B,YAAWD,wBAAA,GACNrC,EAASY,gBAAgB0B,aACzBF,UAMX7B,SACE,IAAIP,SAAEA,EAAQoF,QAAEA,EAAO5E,MAAEA,GAAUF,KAAKG,OACpCG,gBAAEA,GAAoBZ,EAQtBqF,EAAgB,CAClBC,CAACF,EAAQnF,SAAS,EAClBqF,CAACtF,EAASuF,eAAe,EACzBD,CAAA,WAAApE,OAAYN,EAAgB0B,YAAYQ,QAAS,EACjDwC,CAAA,UAAApE,OAAWN,EAAgBkC,QAAS,GAEtC,OACEhC,IAAAC,cAACyE,IAAWC,SAAQ,KACjBC,IAAA,IAACC,OAAEA,GAAQD,EAAA,OACV5E,IAAAC,cAAC6E,WAAQ,KACP9E,IAAAC,cAAA,OAAKS,UAAWqE,YAAUR,IACvBzE,EAAgB8C,OAAOoC,MAAQhF,IAAAC,cAACgF,EAAa,MAE9CjF,IAAAC,cAAC6D,IAAM,CAACoB,QAAM,GACXpF,EAAgBC,OAAOiF,MAAQhF,IAAAC,cAACkF,EAAa,OAGhDnF,IAAAC,cAAC6D,IAAM,CAACC,MAAI,GACTjE,EAAgB0B,YAAYwD,MAAQhF,IAAAC,cAACmF,EAAc,OAGrDlG,EAASmG,kBASRrF,IAAAC,cAAA,OACEqF,QAAS,CAAEC,iBAAiB,GAC5B7E,UAAU,0BAEVV,IAAAC,cAAA,OAAKS,UAAU,iBAAiB8E,YAAaX,IAC7C7E,IAAAC,cAAA,OAAKS,UAAU,YACdxB,EAASuG,OAAOT,OAAS9F,EAASuG,OAAOC,OAAS1F,IAAAC,cAAC0F,IAAM,QAI5DzG,EAASmG,kBACTrF,IAAAC,cAAA,OACEqF,QAAS,CAAEC,iBAAiB,GAC5B7E,UAAU,0BAEVV,IAAAC,cAAA,OAAKS,UAAU,iBAAiB8E,YAAaX,IAC7C7E,IAAAC,cAAA,OAAKS,UAAU,YACdxB,EAASuG,OAAOT,OAAS9F,EAASuG,OAAOC,OAAS1F,IAAAC,cAAC0F,IAAM,OAI7DzG,EAASuG,OAAOT,MAAQ9F,EAASuG,OAAOC,OAAS1F,IAAAC,cAAC0F,IAAM,OAE1DzG,EAAS0G,iBAAiBZ,MAAQhF,IAAAC,cAAC4F,IAAgB","file":"static/js/38.40b34921.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { EgretHorizontalNav } from \"egret\";\r\nimport { navigations } from \"../../navigations\";\r\nimport { withStyles, MuiThemeProvider } from \"@material-ui/core\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\r\nconst ViewEgretHorizontalNav = withTranslation()(EgretHorizontalNav);\r\nclass Layout2Navbar extends Component {\r\n  state = {};\r\n  render() {\r\n    let { theme, settings } = this.props;\r\n    const navbarTheme =\r\n      settings.themes[settings.layout2Settings.navbar.theme] || theme;\r\n    return (\r\n      <MuiThemeProvider theme={navbarTheme}>\r\n        <Helmet>\r\n          <style>\r\n            {`.horizontal-nav a, \r\n              .horizontal-nav label {\r\n                color: ${navbarTheme.palette.primary.contrastText};\r\n              }\r\n              .navbar,\r\n              .horizontal-nav ul ul {\r\n                background: ${navbarTheme.palette.primary.main};\r\n              }\r\n              .horizontal-nav ul li ul li:hover,\r\n              .horizontal-nav ul li ul li.open {\r\n                background: ${navbarTheme.palette.primary.dark};\r\n              }\r\n            `}\r\n          </style>\r\n        </Helmet>\r\n        <div className=\"navbar\">\r\n          <div className=\"container\">\r\n            <ViewEgretHorizontalNav navigation={navigations} max={6} />\r\n          </div>\r\n        </div>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nLayout2Navbar.propTypes = {\r\n  settings: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  settings: state.layout.settings\r\n});\r\n\r\nexport default withStyles({}, { withTheme: true })(\r\n  connect(\r\n    mapStateToProps,\r\n    {}\r\n  )(Layout2Navbar)\r\n);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles, MuiThemeProvider } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setLayoutSettings,\r\n  setDefaultSettings\r\n} from \"app/redux/actions/LayoutActions\";\r\nimport { isMobile } from \"utils\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Sidenav from \"../SharedCompoents/Sidenav\";\r\nimport Brand from \"../SharedCompoents/Brand\";\r\nimport SidenavTheme from \"../EgretTheme/SidenavTheme\";\r\n\r\nclass Layout2Sidenav extends Component {\r\n  state = {\r\n    sidenavToggleChecked: false\r\n  };\r\n\r\n  componentWillMount() {\r\n    // CLOSE SIDENAV ON ROUTE CHANGE ON MOBILE\r\n    this.unlistenRouteChange = this.props.history.listen((location, action) => {\r\n      if (isMobile()) {\r\n        this.updateSidebarMode({ mode: \"close\" });\r\n      }\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unlistenRouteChange();\r\n  }\r\n\r\n  updateSidebarMode = sidebarSettings => {\r\n    let { settings, setLayoutSettings } = this.props;\r\n    setLayoutSettings({\r\n      ...settings,\r\n      layout2Settings: {\r\n        ...settings.layout2Settings,\r\n        leftSidebar: {\r\n          ...settings.layout2Settings.leftSidebar,\r\n          ...sidebarSettings\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let { theme, settings } = this.props;\r\n    const sidenavTheme =\r\n      settings.themes[settings.layout2Settings.leftSidebar.theme] || theme;\r\n    return (\r\n      <MuiThemeProvider theme={sidenavTheme}>\r\n        <SidenavTheme theme={sidenavTheme} settings={settings} />\r\n        <div className=\"sidenav\">\r\n          <div className=\"sidenav__hold\">\r\n            <Brand />\r\n            <Sidenav />\r\n          </div>\r\n        </div>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nLayout2Sidenav.propTypes = {\r\n  setDefaultSettings: PropTypes.func.isRequired,\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  settings: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  setDefaultSettings: PropTypes.func.isRequired,\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  settings: state.layout.settings\r\n});\r\n\r\nexport default withStyles({}, { withTheme: true })(\r\n  withRouter(\r\n    connect(\r\n      mapStateToProps,\r\n      {\r\n        setLayoutSettings,\r\n        setDefaultSettings\r\n      }\r\n    )(Layout2Sidenav)\r\n  )\r\n);\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Icon,\r\n  IconButton,\r\n  Badge,\r\n  Hidden,\r\n  withStyles,\r\n  MuiThemeProvider,\r\n  MenuItem\r\n} from \"@material-ui/core\";\r\nimport { EgretMenu, EgretToolbarMenu, EgretSearchBox } from \"egret\";\r\nimport { setLayoutSettings } from \"app/redux/actions/LayoutActions\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nimport NotificationBar from \"../SharedCompoents/NotificationBar\";\r\nimport ShoppingCart from \"../SharedCompoents/ShoppingCart\";\r\nimport ConstantList from \"../../appConfig\";\r\nimport LanguageSelect from '../SharedCompoents/LanguageSelect';\r\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\r\nimport { logoutUser } from \"app/redux/actions/UserActions\";\r\nconst ViewLanguageSelect = withTranslation()(LanguageSelect);\r\nclass Layout2Topbar extends Component {\r\n  state = {};\r\n\r\n  handleSignOut = () => {this.props.logoutUser();};\r\n\r\n  updateSidebarMode = sidebarSettings => {\r\n    let { settings, setLayoutSettings } = this.props;\r\n\r\n    setLayoutSettings({\r\n      ...settings,\r\n      layout2Settings: {\r\n        ...settings.layout2Settings,\r\n        leftSidebar: {\r\n          ...settings.layout2Settings.leftSidebar,\r\n          ...sidebarSettings\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  handleSidebarToggle = () => {\r\n    let { settings } = this.props;\r\n    let { layout2Settings } = settings;\r\n\r\n    let mode =\r\n      layout2Settings.leftSidebar.mode === \"close\" ? \"mobile\" : \"close\";\r\n\r\n    this.updateSidebarMode({ mode });\r\n  };\r\n\r\n  render() {\r\n    let { theme, settings } = this.props;\r\n    const topbarTheme =\r\n      settings.themes[settings.layout2Settings.topbar.theme] || theme;\r\n    return (\r\n      <MuiThemeProvider theme={topbarTheme}>\r\n        <Helmet>\r\n          <style>\r\n            {`.topbar {\r\n              background-color: ${topbarTheme.palette.primary.main};\r\n              border-color: ${topbarTheme.palette.divider} !important;\r\n            }\r\n            .topbar .brand__text {\r\n              color: ${topbarTheme.palette.primary.contrastText};\r\n            }\r\n            `}\r\n          </style>\r\n        </Helmet>\r\n\r\n        <div className=\"topbar\">\r\n          <div className=\"flex flex-space-between flex-middle container h-100\">\r\n            <div className=\"flex flex-middle brand\">\r\n              <img src={ConstantList.ROOT_PATH+\"assets/images/logo.svg\"} alt=\"company-logo\" />\r\n              <span className=\"brand__text\">Egret</span>\r\n            </div>\r\n            <div className=\"mx-auto\"></div>\r\n            <div className=\"flex flex-middle\">\r\n              <EgretToolbarMenu offsetTop=\"80px\">\r\n                <ViewLanguageSelect/>\r\n                <EgretSearchBox />\r\n\r\n                <NotificationBar />\r\n\r\n                <ShoppingCart/>\r\n\r\n                <EgretMenu\r\n                  menuButton={\r\n                    <img\r\n                      className=\"mx-8 text-middle circular-image-small cursor-pointer\"\r\n                      src={ConstantList.ROOT_PATH+ \"assets/images/avatar.jpg\"}\r\n                      alt=\"user\"\r\n                    />\r\n                  }\r\n                >\r\n                  <MenuItem\r\n                    className=\"flex flex-middle\"\r\n                    style={{ minWidth: 185 }}\r\n                  >\r\n                    <Icon> home </Icon>\r\n                    <span className=\"pl-16\"> Home </span>\r\n                  </MenuItem>\r\n                  <MenuItem\r\n                    className=\"flex flex-middle\"\r\n                    style={{ minWidth: 185 }}\r\n                  >\r\n                    <Icon> person </Icon>\r\n                    <span className=\"pl-16\"> Person </span>\r\n                  </MenuItem>\r\n                  <MenuItem\r\n                    onClick={this.handleSignOut}\r\n                    className=\"flex flex-middle\"\r\n                    style={{ minWidth: 185 }}\r\n                  >\r\n                    <Icon> power_settings_new </Icon>\r\n                    <span className=\"pl-16\"> Logout </span>\r\n                  </MenuItem>\r\n                </EgretMenu>\r\n              </EgretToolbarMenu>\r\n\r\n              <Hidden mdUp>\r\n                <IconButton onClick={this.handleSidebarToggle}>\r\n                  <Icon>menu</Icon>\r\n                </IconButton>\r\n              </Hidden>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nLayout2Topbar.propTypes = {\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  logoutUser: PropTypes.func.isRequired,\r\n  settings: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  logoutUser: PropTypes.func.isRequired,\r\n  settings: state.layout.settings\r\n});\r\n\r\nexport default withStyles({}, { withTheme: true })(\r\n  connect(\r\n    mapStateToProps,\r\n    { setLayoutSettings, logoutUser }\r\n  )(Layout2Topbar)\r\n);\r\n","import React, { Component, Fragment } from \"react\";\r\n\r\nimport { Hidden } from \"@material-ui/core\";\r\nimport AppContext from \"app/appContext\";\r\nimport Footer from \"../SharedCompoents/Footer\";\r\nimport Layout2Navbar from \"./Layout2Navbar\";\r\nimport Layout2Sidenav from \"./Layout2Sidenav\";\r\nimport Layout2Topbar from \"./Layout2Topbar\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport Scrollbar from \"react-perfect-scrollbar\";\r\nimport SecondarySidebar from \"../SharedCompoents/SecondarySidebar\";\r\nimport { classList } from \"utils\";\r\nimport { connect } from \"react-redux\";\r\nimport { renderRoutes } from \"react-router-config\";\r\nimport { setLayoutSettings } from \"app/redux/actions/LayoutActions\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\n\r\nconst styles = theme => {\r\n  return {\r\n    layout: {\r\n      backgroundColor: theme.palette.background.default,\r\n      color: theme.palette.text.primary\r\n    }\r\n  };\r\n};\r\n\r\nclass Layout2 extends Component {\r\n  state = {};\r\n  updateSidebarMode = sidebarSettings => {\r\n    let { settings, setLayoutSettings } = this.props;\r\n    setLayoutSettings({\r\n      ...settings,\r\n      layout2Settings: {\r\n        ...settings.layout2Settings,\r\n        leftSidebar: {\r\n          ...settings.layout2Settings.leftSidebar,\r\n          ...sidebarSettings\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let { settings, classes, theme } = this.props;\r\n    let { layout2Settings } = settings;\r\n\r\n    // let layoutClasses = {\r\n    //   [classes.layout]: true,\r\n    //   [settings.activeLayout]: true,\r\n    //   [`sidenav-${layout2Settings.leftSidebar.mode}`]: true,\r\n    //   [`layout-${layout2Settings.mode} theme-${theme.palette.type}`]: true\r\n    // };\r\n    let layoutClasses = {\r\n      [classes.layout]: true,\r\n      [settings.activeLayout]: true,\r\n      [`sidenav-${layout2Settings.leftSidebar.mode}`]: true,\r\n      [`layout-${layout2Settings.mode}`]: true\r\n    };\r\n    return (\r\n      <AppContext.Consumer>\r\n        {({ routes }) => (\r\n          <Fragment>\r\n            <div className={classList(layoutClasses)}>\r\n              {layout2Settings.topbar.show && <Layout2Topbar />}\r\n\r\n              <Hidden smDown>\r\n                {layout2Settings.navbar.show && <Layout2Navbar />}\r\n              </Hidden>\r\n\r\n              <Hidden mdUp>\r\n                {layout2Settings.leftSidebar.show && <Layout2Sidenav />}\r\n              </Hidden>\r\n\r\n              {settings.perfectScrollbar && (\r\n                // <Scrollbar\r\n                //   options={{ suppressScrollX: true }}\r\n                //   className=\"scrollable-content p-0\"\r\n                // >\r\n                //   <div className=\"container p-0\">{renderRoutes(routes)}</div>\r\n                //   <div className=\"my-auto\"></div>\r\n                //   {settings.footer.show && !settings.footer.fixed && <Footer />}\r\n                // </Scrollbar>\r\n                <div\r\n                  options={{ suppressScrollX: true }}\r\n                  className=\"scrollable-content p-0\"\r\n                >\r\n                  <div className=\"container p-0\">{renderRoutes(routes)}</div>\r\n                  <div className=\"my-auto\"></div>\r\n                  {settings.footer.show && !settings.footer.fixed && <Footer />}\r\n                </div>                \r\n              )}\r\n\r\n              {!settings.perfectScrollbar && (\r\n                <div\r\n                  options={{ suppressScrollX: true }}\r\n                  className=\"scrollable-content p-0\"\r\n                >\r\n                  <div className=\"container p-0\">{renderRoutes(routes)}</div>\r\n                  <div className=\"my-auto\"></div>\r\n                  {settings.footer.show && !settings.footer.fixed && <Footer />}\r\n                </div>\r\n              )}\r\n\r\n              {settings.footer.show && settings.footer.fixed && <Footer />}\r\n            </div>\r\n            {settings.secondarySidebar.show && <SecondarySidebar />}\r\n          </Fragment>\r\n        )}\r\n      </AppContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nLayout2.propTypes = {\r\n  settings: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  settings: state.layout.settings\r\n});\r\n\r\nexport default withStyles(styles, { withTheme: true })(\r\n  connect(\r\n    mapStateToProps,\r\n    { setLayoutSettings }\r\n  )(Layout2)\r\n);\r\n"],"sourceRoot":""}