{"version":3,"sources":["app/EgretLayout/Layout2/Layout2Navbar.jsx","app/EgretLayout/Layout2/Layout2Sidenav.jsx","app/EgretLayout/Layout2/Layout2Topbar.jsx","app/EgretLayout/Layout2/Layout2.jsx"],"names":["ViewEgretHorizontalNav","withTranslation","EgretHorizontalNav","Layout2Navbar","_Component","_getPrototypeOf2","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_possibleConstructorReturn","_getPrototypeOf","call","apply","concat","state","_inherits","_createClass","key","value","_this$props","this","props","theme","settings","navbarTheme","themes","layout2Settings","navbar","React","createElement","MuiThemeProvider","Helmet","palette","primary","contrastText","main","dark","className","navigation","navigations","max","Component","withStyles","withTheme","connect","layout","Layout2Sidenav","sidenavToggleChecked","updateSidebarMode","sidebarSettings","setLayoutSettings","_objectSpread","leftSidebar","_this2","unlistenRouteChange","history","listen","location","action","isMobile","mode","_this$props2","sidenavTheme","SidenavTheme","Brand","Sidenav","withRouter","setDefaultSettings","PropTypes","func","isRequired","ViewLanguageSelect","LanguageSelect","Layout2Topbar","handleSignOut","logoutUser","handleSidebarToggle","topbarTheme","topbar","divider","src","ConstantList","ROOT_PATH","alt","EgretToolbarMenu","offsetTop","EgretSearchBox","NotificationBar","ShoppingCart","EgretMenu","menuButton","MenuItem","style","minWidth","Icon","onClick","Hidden","mdUp","IconButton","Layout2","classes","layoutClasses","activeLayout","AppContext","Consumer","_ref","routes","Fragment","classList","show","smDown","perfectScrollbar","options","suppressScrollX","renderRoutes","footer","fixed","Footer","secondarySidebar","SecondarySidebar","backgroundColor","background","default","color","text"],"mappings":"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","file":"static/js/34.429d267c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { EgretHorizontalNav } from \"egret\";\r\nimport { navigations } from \"../../navigations\";\r\nimport { withStyles, MuiThemeProvider } from \"@material-ui/core\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\r\nconst ViewEgretHorizontalNav = withTranslation()(EgretHorizontalNav);\r\nclass Layout2Navbar extends Component {\r\n  state = {};\r\n  render() {\r\n    let { theme, settings } = this.props;\r\n    const navbarTheme =\r\n      settings.themes[settings.layout2Settings.navbar.theme] || theme;\r\n    return (\r\n      <MuiThemeProvider theme={navbarTheme}>\r\n        <Helmet>\r\n          <style>\r\n            {`.horizontal-nav a, \r\n              .horizontal-nav label {\r\n                color: ${navbarTheme.palette.primary.contrastText};\r\n              }\r\n              .navbar,\r\n              .horizontal-nav ul ul {\r\n                background: ${navbarTheme.palette.primary.main};\r\n              }\r\n              .horizontal-nav ul li ul li:hover,\r\n              .horizontal-nav ul li ul li.open {\r\n                background: ${navbarTheme.palette.primary.dark};\r\n              }\r\n            `}\r\n          </style>\r\n        </Helmet>\r\n        <div className=\"navbar\">\r\n          <div className=\"container\">\r\n            <ViewEgretHorizontalNav navigation={navigations} max={6} />\r\n          </div>\r\n        </div>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nLayout2Navbar.propTypes = {\r\n  settings: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  settings: state.layout.settings\r\n});\r\n\r\nexport default withStyles({}, { withTheme: true })(\r\n  connect(\r\n    mapStateToProps,\r\n    {}\r\n  )(Layout2Navbar)\r\n);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles, MuiThemeProvider } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setLayoutSettings,\r\n  setDefaultSettings\r\n} from \"app/redux/actions/LayoutActions\";\r\nimport { isMobile } from \"utils\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Sidenav from \"../SharedCompoents/Sidenav\";\r\nimport Brand from \"../SharedCompoents/Brand\";\r\nimport SidenavTheme from \"../EgretTheme/SidenavTheme\";\r\n\r\nclass Layout2Sidenav extends Component {\r\n  state = {\r\n    sidenavToggleChecked: false\r\n  };\r\n\r\n  componentWillMount() {\r\n    // CLOSE SIDENAV ON ROUTE CHANGE ON MOBILE\r\n    this.unlistenRouteChange = this.props.history.listen((location, action) => {\r\n      if (isMobile()) {\r\n        this.updateSidebarMode({ mode: \"close\" });\r\n      }\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unlistenRouteChange();\r\n  }\r\n\r\n  updateSidebarMode = sidebarSettings => {\r\n    let { settings, setLayoutSettings } = this.props;\r\n    setLayoutSettings({\r\n      ...settings,\r\n      layout2Settings: {\r\n        ...settings.layout2Settings,\r\n        leftSidebar: {\r\n          ...settings.layout2Settings.leftSidebar,\r\n          ...sidebarSettings\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let { theme, settings } = this.props;\r\n    const sidenavTheme =\r\n      settings.themes[settings.layout2Settings.leftSidebar.theme] || theme;\r\n    return (\r\n      <MuiThemeProvider theme={sidenavTheme}>\r\n        <SidenavTheme theme={sidenavTheme} settings={settings} />\r\n        <div className=\"sidenav\">\r\n          <div className=\"sidenav__hold\">\r\n            <Brand />\r\n            <Sidenav />\r\n          </div>\r\n        </div>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nLayout2Sidenav.propTypes = {\r\n  setDefaultSettings: PropTypes.func.isRequired,\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  settings: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  setDefaultSettings: PropTypes.func.isRequired,\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  settings: state.layout.settings\r\n});\r\n\r\nexport default withStyles({}, { withTheme: true })(\r\n  withRouter(\r\n    connect(\r\n      mapStateToProps,\r\n      {\r\n        setLayoutSettings,\r\n        setDefaultSettings\r\n      }\r\n    )(Layout2Sidenav)\r\n  )\r\n);\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Icon,\r\n  IconButton,\r\n  Badge,\r\n  Hidden,\r\n  withStyles,\r\n  MuiThemeProvider,\r\n  MenuItem\r\n} from \"@material-ui/core\";\r\nimport { EgretMenu, EgretToolbarMenu, EgretSearchBox } from \"egret\";\r\nimport { setLayoutSettings } from \"app/redux/actions/LayoutActions\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nimport NotificationBar from \"../SharedCompoents/NotificationBar\";\r\nimport ShoppingCart from \"../SharedCompoents/ShoppingCart\";\r\nimport ConstantList from \"../../appConfig\";\r\nimport LanguageSelect from '../SharedCompoents/LanguageSelect';\r\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\r\nimport { logoutUser } from \"app/redux/actions/UserActions\";\r\nconst ViewLanguageSelect = withTranslation()(LanguageSelect);\r\nclass Layout2Topbar extends Component {\r\n  state = {};\r\n\r\n  handleSignOut = () => {this.props.logoutUser();};\r\n\r\n  updateSidebarMode = sidebarSettings => {\r\n    let { settings, setLayoutSettings } = this.props;\r\n\r\n    setLayoutSettings({\r\n      ...settings,\r\n      layout2Settings: {\r\n        ...settings.layout2Settings,\r\n        leftSidebar: {\r\n          ...settings.layout2Settings.leftSidebar,\r\n          ...sidebarSettings\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  handleSidebarToggle = () => {\r\n    let { settings } = this.props;\r\n    let { layout2Settings } = settings;\r\n\r\n    let mode =\r\n      layout2Settings.leftSidebar.mode === \"close\" ? \"mobile\" : \"close\";\r\n\r\n    this.updateSidebarMode({ mode });\r\n  };\r\n\r\n  render() {\r\n    let { theme, settings } = this.props;\r\n    const topbarTheme =\r\n      settings.themes[settings.layout2Settings.topbar.theme] || theme;\r\n    return (\r\n      <MuiThemeProvider theme={topbarTheme}>\r\n        <Helmet>\r\n          <style>\r\n            {`.topbar {\r\n              background-color: ${topbarTheme.palette.primary.main};\r\n              border-color: ${topbarTheme.palette.divider} !important;\r\n            }\r\n            .topbar .brand__text {\r\n              color: ${topbarTheme.palette.primary.contrastText};\r\n            }\r\n            `}\r\n          </style>\r\n        </Helmet>\r\n\r\n        <div className=\"topbar\">\r\n          <div className=\"flex flex-space-between flex-middle container h-100\">\r\n            <div className=\"flex flex-middle brand\">\r\n              <img src={ConstantList.ROOT_PATH+\"assets/images/logo.svg\"} alt=\"company-logo\" />\r\n              <span className=\"brand__text\">Egret</span>\r\n            </div>\r\n            <div className=\"mx-auto\"></div>\r\n            <div className=\"flex flex-middle\">\r\n              <EgretToolbarMenu offsetTop=\"80px\">\r\n                <ViewLanguageSelect/>\r\n                <EgretSearchBox />\r\n\r\n                <NotificationBar />\r\n\r\n                <ShoppingCart/>\r\n\r\n                <EgretMenu\r\n                  menuButton={\r\n                    <img\r\n                      className=\"mx-8 text-middle circular-image-small cursor-pointer\"\r\n                      src={ConstantList.ROOT_PATH+ \"assets/images/avatar.jpg\"}\r\n                      alt=\"user\"\r\n                    />\r\n                  }\r\n                >\r\n                  <MenuItem\r\n                    className=\"flex flex-middle\"\r\n                    style={{ minWidth: 185 }}\r\n                  >\r\n                    <Icon> home </Icon>\r\n                    <span className=\"pl-16\"> Home </span>\r\n                  </MenuItem>\r\n                  <MenuItem\r\n                    className=\"flex flex-middle\"\r\n                    style={{ minWidth: 185 }}\r\n                  >\r\n                    <Icon> person </Icon>\r\n                    <span className=\"pl-16\"> Person </span>\r\n                  </MenuItem>\r\n                  <MenuItem\r\n                    onClick={this.handleSignOut}\r\n                    className=\"flex flex-middle\"\r\n                    style={{ minWidth: 185 }}\r\n                  >\r\n                    <Icon> power_settings_new </Icon>\r\n                    <span className=\"pl-16\"> Logout </span>\r\n                  </MenuItem>\r\n                </EgretMenu>\r\n              </EgretToolbarMenu>\r\n\r\n              <Hidden mdUp>\r\n                <IconButton onClick={this.handleSidebarToggle}>\r\n                  <Icon>menu</Icon>\r\n                </IconButton>\r\n              </Hidden>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nLayout2Topbar.propTypes = {\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  logoutUser: PropTypes.func.isRequired,\r\n  settings: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  logoutUser: PropTypes.func.isRequired,\r\n  settings: state.layout.settings\r\n});\r\n\r\nexport default withStyles({}, { withTheme: true })(\r\n  connect(\r\n    mapStateToProps,\r\n    { setLayoutSettings, logoutUser }\r\n  )(Layout2Topbar)\r\n);\r\n","import React, { Component, Fragment } from \"react\";\r\n\r\nimport { Hidden } from \"@material-ui/core\";\r\nimport AppContext from \"app/appContext\";\r\nimport Footer from \"../SharedCompoents/Footer\";\r\nimport Layout2Navbar from \"./Layout2Navbar\";\r\nimport Layout2Sidenav from \"./Layout2Sidenav\";\r\nimport Layout2Topbar from \"./Layout2Topbar\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport Scrollbar from \"react-perfect-scrollbar\";\r\nimport SecondarySidebar from \"../SharedCompoents/SecondarySidebar\";\r\nimport { classList } from \"utils\";\r\nimport { connect } from \"react-redux\";\r\nimport { renderRoutes } from \"react-router-config\";\r\nimport { setLayoutSettings } from \"app/redux/actions/LayoutActions\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\n\r\nconst styles = theme => {\r\n  return {\r\n    layout: {\r\n      backgroundColor: theme.palette.background.default,\r\n      color: theme.palette.text.primary\r\n    }\r\n  };\r\n};\r\n\r\nclass Layout2 extends Component {\r\n  state = {};\r\n  updateSidebarMode = sidebarSettings => {\r\n    let { settings, setLayoutSettings } = this.props;\r\n    setLayoutSettings({\r\n      ...settings,\r\n      layout2Settings: {\r\n        ...settings.layout2Settings,\r\n        leftSidebar: {\r\n          ...settings.layout2Settings.leftSidebar,\r\n          ...sidebarSettings\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let { settings, classes, theme } = this.props;\r\n    let { layout2Settings } = settings;\r\n\r\n    // let layoutClasses = {\r\n    //   [classes.layout]: true,\r\n    //   [settings.activeLayout]: true,\r\n    //   [`sidenav-${layout2Settings.leftSidebar.mode}`]: true,\r\n    //   [`layout-${layout2Settings.mode} theme-${theme.palette.type}`]: true\r\n    // };\r\n    let layoutClasses = {\r\n      [classes.layout]: true,\r\n      [settings.activeLayout]: true,\r\n      [`sidenav-${layout2Settings.leftSidebar.mode}`]: true,\r\n      [`layout-${layout2Settings.mode}`]: true\r\n    };\r\n    return (\r\n      <AppContext.Consumer>\r\n        {({ routes }) => (\r\n          <Fragment>\r\n            <div className={classList(layoutClasses)}>\r\n              {layout2Settings.topbar.show && <Layout2Topbar />}\r\n\r\n              <Hidden smDown>\r\n                {layout2Settings.navbar.show && <Layout2Navbar />}\r\n              </Hidden>\r\n\r\n              <Hidden mdUp>\r\n                {layout2Settings.leftSidebar.show && <Layout2Sidenav />}\r\n              </Hidden>\r\n\r\n              {settings.perfectScrollbar && (\r\n                // <Scrollbar\r\n                //   options={{ suppressScrollX: true }}\r\n                //   className=\"scrollable-content p-0\"\r\n                // >\r\n                //   <div className=\"container p-0\">{renderRoutes(routes)}</div>\r\n                //   <div className=\"my-auto\"></div>\r\n                //   {settings.footer.show && !settings.footer.fixed && <Footer />}\r\n                // </Scrollbar>\r\n                <div\r\n                  options={{ suppressScrollX: true }}\r\n                  className=\"scrollable-content p-0\"\r\n                >\r\n                  <div className=\"container p-0\">{renderRoutes(routes)}</div>\r\n                  <div className=\"my-auto\"></div>\r\n                  {settings.footer.show && !settings.footer.fixed && <Footer />}\r\n                </div>                \r\n              )}\r\n\r\n              {!settings.perfectScrollbar && (\r\n                <div\r\n                  options={{ suppressScrollX: true }}\r\n                  className=\"scrollable-content p-0\"\r\n                >\r\n                  <div className=\"container p-0\">{renderRoutes(routes)}</div>\r\n                  <div className=\"my-auto\"></div>\r\n                  {settings.footer.show && !settings.footer.fixed && <Footer />}\r\n                </div>\r\n              )}\r\n\r\n              {settings.footer.show && settings.footer.fixed && <Footer />}\r\n            </div>\r\n            {settings.secondarySidebar.show && <SecondarySidebar />}\r\n          </Fragment>\r\n        )}\r\n      </AppContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nLayout2.propTypes = {\r\n  settings: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  settings: state.layout.settings\r\n});\r\n\r\nexport default withStyles(styles, { withTheme: true })(\r\n  connect(\r\n    mapStateToProps,\r\n    { setLayoutSettings }\r\n  )(Layout2)\r\n);\r\n"],"sourceRoot":""}