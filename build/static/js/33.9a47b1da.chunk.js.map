{"version":3,"sources":["app/EgretLayout/Layout1/Layout1Topbar.jsx","app/EgretLayout/Layout1/Layout1Sidenav.jsx","app/EgretLayout/Layout1/Layout1.jsx"],"names":["ViewLanguageSelect","withTranslation","LanguageSelect","Layout1Topbar","_Component","_getPrototypeOf2","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_possibleConstructorReturn","_getPrototypeOf","call","apply","concat","state","updateSidebarMode","sidebarSettings","_this$props","props","settings","setLayoutSettings","_objectSpread","layout1Settings","leftSidebar","handleSidebarToggle","mode","isMdScreen","handleSignOut","logoutUser","_inherits","_createClass","key","value","imagePath","ConstantList","ROOT_PATH","user","authService","getLoginUser","API_ENPOINT","_this$props2","this","t","_this$props3","i18n","theme","topbarTheme","themes","topbar","React","createElement","MuiThemeProvider","className","style","backgroundColor","palette","primary","main","IconButton","onClick","Icon","EgretSearchBox","NotificationBar","ShoppingCart","EgretMenu","menuButton","src","alt","MenuItem","minWidth","Link","to","Component","withStyles","root","withTheme","withRouter","connect","PropTypes","func","isRequired","layout","IconButtonWhite","padding","IconSmall","fontSize","Layout1Sidenav","sidenavToggleChecked","hidden","setDefaultSettings","updatedSettings","handleSidenavToggle","setState","renderLogoSwitch","Brand","Switch","onChange","checked","color","renderUser","displayName","username","Tooltip","title","aria-label","size","_this2","unlistenRouteChange","history","listen","location","action","setTimeout","sidenavTheme","SidenavTheme","Fragment","Sidenav","ViewLayout1Sidenav","ViewLayout1Topbar","Layout1","classes","layoutClasses","activeLayout","fixed","AppContext","Consumer","_ref","routes","classList","show","perfectScrollbar","renderRoutes","footer","Footer","background","default"],"mappings":"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","file":"static/js/33.9a47b1da.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport ConstantList from \"../../appConfig\";\r\nimport {\r\n  Icon,\r\n  IconButton,\r\n  Badge,\r\n  MenuItem,\r\n  withStyles,\r\n  MuiThemeProvider\r\n} from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport { setLayoutSettings } from \"app/redux/actions/LayoutActions\";\r\nimport { logoutUser } from \"app/redux/actions/UserActions\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { EgretMenu, EgretSearchBox } from \"egret\";\r\nimport { isMdScreen } from \"utils\";\r\nimport NotificationBar from \"../SharedCompoents/NotificationBar\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ShoppingCart from \"../SharedCompoents/ShoppingCart\";\r\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\r\nimport Select from '@material-ui/core/Select';\r\nimport LanguageSelect from '../SharedCompoents/LanguageSelect';\r\nimport authService from \"../../services/jwtAuthService\";\r\nconst styles = theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.primary.main\r\n  }\r\n});\r\nconst ViewLanguageSelect = withTranslation()(LanguageSelect);\r\n\r\nclass Layout1Topbar extends Component {\r\n  state = {};\r\n\r\n  updateSidebarMode = sidebarSettings => {\r\n    let { settings, setLayoutSettings } = this.props;\r\n\r\n    setLayoutSettings({\r\n      ...settings,\r\n      layout1Settings: {\r\n        ...settings.layout1Settings,\r\n        leftSidebar: {\r\n          ...settings.layout1Settings.leftSidebar,\r\n          ...sidebarSettings\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  handleSidebarToggle = () => {\r\n    let { settings } = this.props;\r\n    let { layout1Settings } = settings;\r\n\r\n    let mode;\r\n    if (isMdScreen()) {\r\n      mode = layout1Settings.leftSidebar.mode === \"close\" ? \"mobile\" : \"close\";\r\n    } else {\r\n      mode = layout1Settings.leftSidebar.mode === \"full\" ? \"close\" : \"full\";\r\n    }\r\n    this.updateSidebarMode({ mode });\r\n  };\r\n\r\n  handleSignOut = () => {\r\n    this.props.logoutUser();\r\n  };\r\n\r\n  render() {\r\n    let imagePath =ConstantList.ROOT_PATH+\"assets/images/avatar.jpg\"\r\n    let user = authService.getLoginUser();\r\n    if(user!=null && user.imagePath!=null){\r\n      imagePath =ConstantList.API_ENPOINT + user.imagePath;\r\n    }\r\n    const { t, i18n } = this.props;\r\n    let { theme, settings } = this.props;\r\n    let language= 'en';\r\n    const changeLanguage = lng => {\r\n      alert(lng);\r\n      i18n.changeLanguage(lng);\r\n      //alert('here');\r\n    };    \r\n\r\n  \r\n    const topbarTheme =\r\n      settings.themes[settings.layout1Settings.topbar.theme] || theme;\r\n    return (\r\n      <MuiThemeProvider theme={topbarTheme}>\r\n        <div className=\"topbar\">\r\n          <div\r\n            className={`topbar-hold`}\r\n            style={{ backgroundColor: topbarTheme.palette.primary.main }}\r\n          >\r\n            <div className=\"flex flex-space-between flex-middle h-100\">\r\n              <div className=\"flex\">\r\n                <IconButton onClick={this.handleSidebarToggle}>\r\n                  <Icon>menu</Icon>\r\n                </IconButton>\r\n\r\n                <div className=\"hide-on-mobile\">\r\n                  {/* <IconButton>\r\n                    <Icon>mail_outline</Icon>\r\n                  </IconButton>\r\n\r\n                  <IconButton>\r\n                    <Icon>web_asset</Icon>\r\n                  </IconButton>\r\n\r\n                  <IconButton>\r\n                    <Icon>star_outline</Icon>\r\n                  </IconButton> */}\r\n                </div>\r\n              </div>\r\n              <div className=\"flex flex-middle\">\r\n                <EgretSearchBox />\r\n                <ViewLanguageSelect/>\r\n                <NotificationBar />\r\n                <ShoppingCart></ShoppingCart>\r\n                {/* <select class=\"form-control language-selector\"  onClick={() => changeLanguage('en')}>\r\n                    <option value=\"de\">Deutsch</option>\r\n                    <option value=\"en\">English</option>\r\n                    <option value=\"fr\">Français</option>\r\n                    <option value=\"it\">Italiano</option>\r\n                </select> */}\r\n                \r\n                <EgretMenu\r\n                  menuButton={\r\n                    <img\r\n                      className=\"mx-8 text-middle circular-image-small cursor-pointer\"\r\n                      src={imagePath}\r\n                      alt=\"user\"\r\n                    />\r\n                  }\r\n                >\r\n                  <MenuItem style={{ minWidth: 185 }}>\r\n                    <Link className=\"flex flex-middle\" to=\"/\">\r\n                      <Icon> home </Icon>\r\n                      <span className=\"pl-16\"> {t('Dashboard.dashboard')} </span>\r\n                    </Link>\r\n                  </MenuItem>\r\n                  <MenuItem style={{ minWidth: 185 }}>\r\n                    <Link\r\n                      className=\"flex flex-middle\"\r\n                      to=\"/page-layouts/user-profile\"\r\n                    >\r\n                      <Icon> person </Icon>\r\n                      <span className=\"pl-16\"> {t('Dashboard.profile')} </span>\r\n                    </Link>\r\n                  </MenuItem>\r\n                  <MenuItem\r\n                    onClick={this.handleSignOut}\r\n                    className=\"flex flex-middle\"\r\n                    style={{ minWidth: 185 }}\r\n                  >\r\n                    <Icon> power_settings_new </Icon>\r\n                    <span className=\"pl-16\"> {t('Dashboard.logout')} </span>\r\n                  </MenuItem>\r\n                </EgretMenu>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nLayout1Topbar.propTypes = {\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  logoutUser: PropTypes.func.isRequired,\r\n  settings: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  logoutUser: PropTypes.func.isRequired,\r\n  settings: state.layout.settings\r\n});\r\n\r\nexport default withStyles(styles, { withTheme: true })(\r\n  withRouter(\r\n    connect(\r\n      mapStateToProps,\r\n      { setLayoutSettings, logoutUser }\r\n    )(Layout1Topbar)\r\n  )\r\n);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Switch,\r\n  Icon,\r\n  withStyles,\r\n  MenuItem,\r\n  Tooltip,\r\n  IconButton,\r\n  MuiThemeProvider\r\n} from \"@material-ui/core\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setLayoutSettings,\r\n  setDefaultSettings\r\n} from \"app/redux/actions/LayoutActions\";\r\nimport { logoutUser } from \"app/redux/actions/UserActions\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { EgretMenu } from \"egret\";\r\nimport Sidenav from \"../SharedCompoents/Sidenav\";\r\nimport Brand from \"../SharedCompoents/Brand\";\r\nimport SidenavTheme from \"../EgretTheme/SidenavTheme\";\r\nimport { isMdScreen } from \"utils\";\r\nimport ConstantList from \"../../appConfig\";\r\nimport { Link } from \"react-router-dom\";\r\nimport authService from \"../../services/jwtAuthService\";\r\nconst styles = theme => ({});\r\n\r\nconst IconButtonWhite = withStyles(theme => ({\r\n  root: {\r\n    // color: theme.palette.getContrastText(purple[500]),\r\n    backgroundColor: \"transparent\",\r\n    padding: \"5px\"\r\n  }\r\n}))(IconButton);\r\n\r\nconst IconSmall = withStyles(() => ({\r\n  root: {\r\n    fontSize: \"1rem\"\r\n  }\r\n}))(Icon);\r\n\r\nclass Layout1Sidenav extends Component {\r\n  state = {\r\n    sidenavToggleChecked: false,\r\n    hidden: true\r\n  };\r\n\r\n  componentWillMount() {\r\n    // CLOSE SIDENAV ON ROUTE CHANGE ON MOBILE\r\n    this.unlistenRouteChange = this.props.history.listen((location, action) => {\r\n      if (isMdScreen()) {\r\n        this.updateSidebarMode({ mode: \"close\" });\r\n      }\r\n    });\r\n\r\n    setTimeout(() => {\r\n      this.setState({ hidden: false });\r\n    }, 400);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unlistenRouteChange();\r\n  }\r\n\r\n  updateSidebarMode = sidebarSettings => {\r\n    let { settings, setLayoutSettings, setDefaultSettings } = this.props;\r\n    const updatedSettings = {\r\n      ...settings,\r\n      layout1Settings: {\r\n        ...settings.layout1Settings,\r\n        leftSidebar: {\r\n          ...settings.layout1Settings.leftSidebar,\r\n          ...sidebarSettings\r\n        }\r\n      }\r\n    };\r\n    setLayoutSettings(updatedSettings);\r\n    setDefaultSettings(updatedSettings);\r\n  };\r\n\r\n  handleSidenavToggle = () => {\r\n    let { sidenavToggleChecked } = this.state;\r\n    let mode = sidenavToggleChecked ? \"full\" : \"compact\";\r\n    this.updateSidebarMode({ mode });\r\n    this.setState({ sidenavToggleChecked: !sidenavToggleChecked });\r\n  };\r\n\r\n  handleSignOut = () => {\r\n    this.props.logoutUser();\r\n  };\r\n\r\n  renderLogoSwitch = () => (\r\n    // Open Brand component file to replace logo and text\r\n    <Brand>\r\n      <Switch\r\n        className=\"sidenav__toggle hide-on-mobile\"\r\n        onChange={this.handleSidenavToggle}\r\n        checked={this.state.sidenavToggleChecked}\r\n        color=\"secondary\"\r\n      />\r\n    </Brand>\r\n  );\r\n\r\n  renderUser = () => {\r\n    const { t, i18n } = this.props;\r\n    //let { user } = this.props;\r\n    let imagePath =ConstantList.ROOT_PATH+\"assets/images/avatar.jpg\"\r\n    //let user = authService.getLoginUser();\r\n\r\n    let user = authService.getLoginUser();\r\n    if(user!=null && user.imagePath!=null){\r\n      imagePath =ConstantList.API_ENPOINT + user.imagePath;\r\n    }\r\n\r\n    if(user!=null && user.imagePath!=null){\r\n      imagePath =ConstantList.API_ENPOINT + user.imagePath;\r\n    }\r\n    return (\r\n      <div className=\"sidenav__user\">\r\n        <div className=\"username-photo\">\r\n          <img src={imagePath} alt=\"user\" />\r\n          <span className=\"username text-center\">\r\n            {user? user.displayName : ''}\r\n            <br/>\r\n            {user? user.username: ''}\r\n          </span>\r\n        </div>\r\n        <div className=\"user__menu\">\r\n          <EgretMenu\r\n          // menuButton={\r\n          //   <Tooltip title=\"Settings\">\r\n          //     <IconButtonWhite aria-label=\"Delete\" className=\"\" size=\"small\">\r\n          //       <IconSmall> settings </IconSmall>\r\n          //     </IconButtonWhite>\r\n          //   </Tooltip>\r\n          // }\r\n          >\r\n            <MenuItem className=\"flex flex-middle\" style={{ minWidth: 185 }}>\r\n              <Icon> home </Icon>\r\n              <span className=\"pl-16\"> {t('Dashboard.dashboard')} </span>\r\n            </MenuItem>\r\n            {/* <MenuItem className=\"flex flex-middle\" style={{ minWidth: 185 }}>\r\n              <Icon> settings </Icon>\r\n              <span className=\"pl-16\"> Account Setting </span>\r\n            </MenuItem> */}\r\n          </EgretMenu>\r\n\r\n          <Tooltip title={t('Dashboard.profile')}>\r\n            <Link\r\n              className=\"flex flex-middle\"\r\n              to=\"/page-layouts/user-profile\"\r\n            >\r\n              <IconButtonWhite aria-label=\"Delete\" className=\"\" size=\"small\">\r\n                <IconSmall>person</IconSmall>\r\n              </IconButtonWhite>\r\n            </Link>\r\n          </Tooltip>\r\n          <Tooltip title={t('Dashboard.logout')}>\r\n            <IconButtonWhite\r\n              aria-label=\"Delete\"\r\n              className=\"\"\r\n              size=\"small\"\r\n              onClick={this.handleSignOut}\r\n            >\r\n              <IconSmall>exit_to_app</IconSmall>\r\n            </IconButtonWhite>\r\n          </Tooltip>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    let { theme, settings } = this.props;\r\n    const sidenavTheme =\r\n      settings.themes[settings.layout1Settings.leftSidebar.theme] || theme;\r\n      \r\n    return (\r\n      <MuiThemeProvider theme={sidenavTheme}>\r\n        <SidenavTheme theme={sidenavTheme} settings={settings} />\r\n\r\n        <div className=\"sidenav\">\r\n          <div className=\"sidenav__hold\">\r\n            {!this.state.hidden && (\r\n              <Fragment>\r\n                {this.renderLogoSwitch()}\r\n                <Sidenav>{this.renderUser()}</Sidenav>\r\n              </Fragment>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nLayout1Sidenav.propTypes = {\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  setDefaultSettings: PropTypes.func.isRequired,\r\n  logoutUser: PropTypes.func.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n  settings: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  setDefaultSettings: PropTypes.func.isRequired,\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  logoutUser: PropTypes.func.isRequired,\r\n  user: state.user,\r\n  settings: state.layout.settings\r\n});\r\n\r\nexport default withStyles(styles, { withTheme: true })(\r\n  withRouter(\r\n    connect(\r\n      mapStateToProps,\r\n      {\r\n        setLayoutSettings,\r\n        setDefaultSettings,\r\n        logoutUser\r\n      }\r\n    )(Layout1Sidenav)\r\n  )\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { setLayoutSettings } from \"app/redux/actions/LayoutActions\";\r\nimport { withStyles } from \"@material-ui/core\";\r\nimport Scrollbar from \"react-perfect-scrollbar\";\r\nimport { isMdScreen, classList } from \"utils\";\r\nimport { renderRoutes } from \"react-router-config\";\r\nimport Layout1Topbar from \"./Layout1Topbar\";\r\nimport Layout1Sidenav from \"./Layout1Sidenav\";\r\nimport Footer from \"../SharedCompoents/Footer\";\r\nimport SecondarySidebar from \"../SharedCompoents/SecondarySidebar\";\r\nimport AppContext from \"app/appContext\";\r\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\r\n// import {EgretLoadable} from \"egret\";\r\n\r\n// const SecondarySidebar = EgretLoadable({\r\n//   loader: () => import(\"../SharedCompoents/SecondarySidebar\")\r\n// });\r\n\r\n// const Footer = EgretLoadable({\r\n//   loader: () => import(\"../SharedCompoents/Footer\")\r\n// });\r\n\r\n// const Layout1Topbar = EgretLoadable({\r\n//   loader: () => import(\"./Layout1Topbar\")\r\n// });\r\n\r\n// const Layout1Sidenav = EgretLoadable({\r\n//   loader: () => import(\"./Layout1Sidenav\")\r\n// });\r\nconst ViewLayout1Sidenav = withTranslation()(Layout1Sidenav);\r\nconst ViewLayout1Topbar = withTranslation()(Layout1Topbar);\r\nconst styles = theme => {\r\n  return {\r\n    layout: {\r\n      backgroundColor: theme.palette.background.default\r\n    }\r\n  };\r\n};\r\n\r\nclass Layout1 extends Component {\r\n  componentWillMount() {\r\n    if (isMdScreen()) {\r\n      this.updateSidebarMode({ mode: \"close\" });\r\n    }\r\n    // if (window) {\r\n    //   // SET DIRECTION\r\n    //   let { settings } = this.props;\r\n    //   document.body.setAttribute(\"dir\", settings.direction);\r\n    // }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // if (window) {\r\n    //   document.body.removeAttribute(\"dir\");\r\n    // }\r\n  }\r\n\r\n  updateSidebarMode = sidebarSettings => {\r\n    let { settings, setLayoutSettings } = this.props;\r\n    setLayoutSettings({\r\n      ...settings,\r\n      layout1Settings: {\r\n        ...settings.layout1Settings,\r\n        leftSidebar: {\r\n          ...settings.layout1Settings.leftSidebar,\r\n          ...sidebarSettings\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let { settings, classes, theme } = this.props;\r\n\r\n    let { layout1Settings } = settings;\r\n    // let layoutClasses = {\r\n    //   [classes.layout]: true,\r\n    //   [`${settings.activeLayout} sidenav-${layout1Settings.leftSidebar.mode} theme-${theme.palette.type} flex`]: true,\r\n    //   \"topbar-fixed\": layout1Settings.topbar.fixed\r\n    // };\r\n    let layoutClasses = {\r\n      [classes.layout]: true,\r\n      [`${settings.activeLayout} sidenav-${layout1Settings.leftSidebar.mode}`]: true,\r\n      \"topbar-fixed\": layout1Settings.topbar.fixed\r\n    };    \r\n    return (\r\n      <AppContext.Consumer>\r\n        {({ routes }) => (\r\n          <div className={classList(layoutClasses)}>\r\n            \r\n            {layout1Settings.leftSidebar.show && <ViewLayout1Sidenav />}\r\n\r\n            <div className=\"content-wrap position-relative\">\r\n              {layout1Settings.topbar.show && layout1Settings.topbar.fixed && (\r\n                // <Layout1Topbar />\r\n                <ViewLayout1Topbar/>\r\n              )}\r\n\r\n              {settings.perfectScrollbar && (\r\n                // <Scrollbar className=\"scrollable-content\">\r\n                //   {layout1Settings.topbar.show &&\r\n                //     !layout1Settings.topbar.fixed && <Layout1Topbar />}\r\n                //   <div className=\"content\">{renderRoutes(routes)}</div>\r\n                //   <div className=\"my-auto\" />\r\n                //   {settings.footer.show && !settings.footer.fixed && <Footer />}\r\n                // </Scrollbar>\r\n                <div className=\"scrollable-content\">\r\n                  {layout1Settings.topbar.show &&\r\n                    !layout1Settings.topbar.fixed && <Layout1Topbar />}\r\n                  <div className=\"content\">{renderRoutes(routes)}</div>\r\n                  <div className=\"my-auto\" />\r\n                  {settings.footer.show && !settings.footer.fixed && <Footer />}\r\n                </div>                \r\n              )}\r\n\r\n              {!settings.perfectScrollbar && (\r\n                <div className=\"scrollable-content\">\r\n                  {layout1Settings.topbar.show &&\r\n                    !layout1Settings.topbar.fixed && <Layout1Topbar />}\r\n                  <div className=\"content\">{renderRoutes(routes)}</div>\r\n                  <div className=\"my-auto\" />\r\n                  {settings.footer.show && !settings.footer.fixed && <Footer />}\r\n                </div>\r\n              )}\r\n\r\n              {settings.footer.show && settings.footer.fixed && <Footer />}\r\n            </div>\r\n            {/* {settings.secondarySidebar.show && <SecondarySidebar />} */}\r\n            \r\n          </div>\r\n        )}\r\n      </AppContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nLayout1.propTypes = {\r\n  settings: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  settings: state.layout.settings\r\n});\r\n\r\nexport default withStyles(styles, { withTheme: true })(\r\n  connect(\r\n    mapStateToProps,\r\n    { setLayoutSettings }\r\n  )(Layout1)\r\n);\r\n"],"sourceRoot":""}