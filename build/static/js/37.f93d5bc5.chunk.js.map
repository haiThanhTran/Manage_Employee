{"version":3,"sources":["C:/Users/trant/Downloads/ThucTap (1)/ThucTap/client/src/app/EgretLayout/Layout1/Layout1Topbar.jsx","C:/Users/trant/Downloads/ThucTap (1)/ThucTap/client/src/app/EgretLayout/Layout1/Layout1Sidenav.jsx","C:/Users/trant/Downloads/ThucTap (1)/ThucTap/client/src/app/EgretLayout/Layout1/Layout1.jsx"],"names":["ViewLanguageSelect","withTranslation","LanguageSelect","withStyles","theme","root","backgroundColor","palette","primary","main","withTheme","withRouter","connect","state","setLayoutSettings","PropTypes","func","isRequired","logoutUser","settings","layout","Component","constructor","super","arguments","this","updateSidebarMode","sidebarSettings","props","_objectSpread","layout1Settings","leftSidebar","handleSidebarToggle","mode","isMdScreen","handleSignOut","render","imagePath","ConstantList","ROOT_PATH","user","authService","getLoginUser","API_ENPOINT","t","i18n","topbarTheme","themes","topbar","React","createElement","MuiThemeProvider","className","style","IconButton","onClick","Icon","EgretSearchBox","NotificationBar","ShoppingCart","EgretMenu","menuButton","src","alt","MenuItem","minWidth","Link","to","IconButtonWhite","padding","IconSmall","fontSize","setDefaultSettings","sidenavToggleChecked","hidden","updatedSettings","handleSidenavToggle","setState","renderLogoSwitch","Brand","Switch","onChange","checked","color","renderUser","displayName","username","Tooltip","title","aria-label","size","componentWillMount","unlistenRouteChange","history","listen","location","action","setTimeout","componentWillUnmount","sidenavTheme","SidenavTheme","Fragment","Sidenav","ViewLayout1Sidenav","Layout1Sidenav","ViewLayout1Topbar","Layout1Topbar","background","default","classes","layoutClasses","[object Object]","concat","activeLayout","topbar-fixed","fixed","AppContext","Consumer","_ref","routes","classList","show","perfectScrollbar","renderRoutes","footer","Footer"],"mappings":"8UAwBA,MAKMA,EAAqBC,cAAkBC,KAoJ9BC,kBAzJAC,IAAK,CAClBC,KAAM,CACJC,gBAAiBF,EAAMG,QAAQC,QAAQC,QAuJT,CAAEC,WAAW,GAAhCP,CACbQ,YACEC,YARoBC,IAAK,CAC3BC,kBAAmBC,YAAUC,KAAKC,WAClCC,WAAYH,YAAUC,KAAKC,WAC3BE,SAAUN,EAAMO,OAAOD,WAOnB,CAAEL,sBAAmBI,gBAFvBN,CApJJ,cAA4BS,YAAUC,cAAAC,SAAAC,WAAAC,KACpCZ,MAAQ,GAAEY,KAEVC,kBAAoBC,KAClB,IAAIR,SAAEA,EAAQL,kBAAEA,GAAsBW,KAAKG,MAE3Cd,EAAiBe,wBAAA,GACZV,GAAQ,IACXW,gBAAeD,wBAAA,GACVV,EAASW,iBAAe,IAC3BC,YAAWF,wBAAA,GACNV,EAASW,gBAAgBC,aACzBJ,UAIVF,KAEDO,oBAAsB,MACpB,IAGIC,GAHAd,SAAEA,GAAaM,KAAKG,OACpBE,gBAAEA,GAAoBX,EAIxBc,EADEC,cAC0C,UAArCJ,EAAgBC,YAAYE,KAAmB,SAAW,QAErB,SAArCH,EAAgBC,YAAYE,KAAkB,QAAU,OAEjER,KAAKC,kBAAkB,CAAEO,WAC1BR,KAEDU,cAAgB,MACdV,KAAKG,MAAMV,eAGbkB,SACE,IAAIC,EAAWC,IAAaC,UAAU,2BAClCC,EAAOC,IAAYC,eACd,MAANF,GAA8B,MAAhBA,EAAKH,YACpBA,EAAWC,IAAaK,YAAcH,EAAKH,WAE7C,MAAMO,EAAEA,EAACC,KAAEA,GAASpB,KAAKG,MACzB,IAAIxB,MAAEA,EAAKe,SAAEA,GAAaM,KAAKG,MAE/B,MAOMkB,EACJ3B,EAAS4B,OAAO5B,EAASW,gBAAgBkB,OAAO5C,QAAUA,EAC5D,OACE6C,IAAAC,cAACC,IAAgB,CAAC/C,MAAO0C,GACvBG,IAAAC,cAAA,OAAKE,UAAU,UACbH,IAAAC,cAAA,OACEE,UAAS,cACTC,MAAO,CAAE/C,gBAAiBwC,EAAYvC,QAAQC,QAAQC,OAEtDwC,IAAAC,cAAA,OAAKE,UAAU,6CACbH,IAAAC,cAAA,OAAKE,UAAU,QACbH,IAAAC,cAACI,IAAU,CAACC,QAAS9B,KAAKO,qBACxBiB,IAAAC,cAACM,IAAI,KAAC,SAGRP,IAAAC,cAAA,OAAKE,UAAU,oBAcjBH,IAAAC,cAAA,OAAKE,UAAU,oBACbH,IAAAC,cAACO,IAAc,MACfR,IAAAC,cAAClD,EAAkB,MACnBiD,IAAAC,cAACQ,IAAe,MAChBT,IAAAC,cAACS,IAAY,MAQbV,IAAAC,cAACU,IAAS,CACRC,WACEZ,IAAAC,cAAA,OACEE,UAAU,uDACVU,IAAKzB,EACL0B,IAAI,UAIRd,IAAAC,cAACc,IAAQ,CAACX,MAAO,CAAEY,SAAU,MAC3BhB,IAAAC,cAACgB,IAAI,CAACd,UAAU,mBAAmBe,GAAG,KACpClB,IAAAC,cAACM,IAAI,KAAC,UACNP,IAAAC,cAAA,QAAME,UAAU,SAAQ,IAAER,EAAE,uBAAuB,OAGvDK,IAAAC,cAACc,IAAQ,CAACX,MAAO,CAAEY,SAAU,MAC3BhB,IAAAC,cAACgB,IAAI,CACHd,UAAU,mBACVe,GAAG,8BAEHlB,IAAAC,cAACM,IAAI,KAAC,YACNP,IAAAC,cAAA,QAAME,UAAU,SAAQ,IAAER,EAAE,qBAAqB,OAGrDK,IAAAC,cAACc,IAAQ,CACPT,QAAS9B,KAAKU,cACdiB,UAAU,mBACVC,MAAO,CAAEY,SAAU,MAEnBhB,IAAAC,cAACM,IAAI,KAAC,wBACNP,IAAAC,cAAA,QAAME,UAAU,SAAQ,IAAER,EAAE,oBAAoB,mEC9HpE,MAEMwB,EAAkBjE,YAAWC,IAAK,CACtCC,KAAM,CAEJC,gBAAiB,cACjB+D,QAAS,SAJWlE,CAMpBmD,KAEEgB,EAAYnE,YAAW,MAC3BE,KAAM,CACJkE,SAAU,UAFIpE,CAIdqD,KA6KWrD,kBA3LAC,IAAK,IA2Lc,CAAEM,WAAW,GAAhCP,CACbQ,YACEC,YAVoBC,IAAK,CAC3B2D,mBAAoBzD,IAAUC,KAAKC,WACnCH,kBAAmBC,IAAUC,KAAKC,WAClCC,WAAYH,IAAUC,KAAKC,WAC3BuB,KAAM3B,EAAM2B,KACZrB,SAAUN,EAAMO,OAAOD,WAOnB,CACEL,sBACA0D,uBACAtD,gBALJN,CA7KJ,cAA6BS,YAAUC,cAAAC,SAAAC,WAAAC,KACrCZ,MAAQ,CACN4D,sBAAsB,EACtBC,QAAQ,GACTjD,KAmBDC,kBAAoBC,KAClB,IAAIR,SAAEA,EAAQL,kBAAEA,EAAiB0D,mBAAEA,GAAuB/C,KAAKG,MAC/D,MAAM+C,EAAe9C,wBAAA,GAChBV,GAAQ,IACXW,gBAAeD,wBAAA,GACVV,EAASW,iBAAe,IAC3BC,YAAWF,wBAAA,GACNV,EAASW,gBAAgBC,aACzBJ,OAITb,EAAkB6D,GAClBH,EAAmBG,KACpBlD,KAEDmD,oBAAsB,MACpB,IAAIH,qBAAEA,GAAyBhD,KAAKZ,MAChCoB,EAAOwC,EAAuB,OAAS,UAC3ChD,KAAKC,kBAAkB,CAAEO,SACzBR,KAAKoD,SAAS,CAAEJ,sBAAuBA,MACxChD,KAEDU,cAAgB,MACdV,KAAKG,MAAMV,eACZO,KAEDqD,iBAAmB,KAEjB7B,IAAAC,cAAC6B,IAAK,KACJ9B,IAAAC,cAAC8B,IAAM,CACL5B,UAAU,iCACV6B,SAAUxD,KAAKmD,oBACfM,QAASzD,KAAKZ,MAAM4D,qBACpBU,MAAM,gBAGX1D,KAED2D,WAAa,MACX,MAAMxC,EAAEA,EAACC,KAAEA,GAASpB,KAAKG,MAEzB,IAAIS,EAAWC,IAAaC,UAAU,2BAGlCC,EAAOC,IAAYC,eAQvB,OAPS,MAANF,GAA8B,MAAhBA,EAAKH,YACpBA,EAAWC,IAAaK,YAAcH,EAAKH,WAGpC,MAANG,GAA8B,MAAhBA,EAAKH,YACpBA,EAAWC,IAAaK,YAAcH,EAAKH,WAG3CY,IAAAC,cAAA,OAAKE,UAAU,iBACbH,IAAAC,cAAA,OAAKE,UAAU,kBACbH,IAAAC,cAAA,OAAKY,IAAKzB,EAAW0B,IAAI,SACzBd,IAAAC,cAAA,QAAME,UAAU,wBACbZ,EAAMA,EAAK6C,YAAc,GAC1BpC,IAAAC,cAAA,WACCV,EAAMA,EAAK8C,SAAU,KAG1BrC,IAAAC,cAAA,OAAKE,UAAU,cACbH,IAAAC,cAACU,IAOD,KAEEX,IAAAC,cAACc,IAAQ,CAACZ,UAAU,mBAAmBC,MAAO,CAAEY,SAAU,MACxDhB,IAAAC,cAACM,IAAI,KAAC,UACNP,IAAAC,cAAA,QAAME,UAAU,SAAQ,IAAER,EAAE,uBAAuB,OAQvDK,IAAAC,cAACqC,IAAO,CAACC,MAAO5C,EAAE,sBAChBK,IAAAC,cAACgB,IAAI,CACHd,UAAU,mBACVe,GAAG,8BAEHlB,IAAAC,cAACkB,EAAe,CAACqB,aAAW,SAASrC,UAAU,GAAGsC,KAAK,SACrDzC,IAAAC,cAACoB,EAAS,KAAC,aAIjBrB,IAAAC,cAACqC,IAAO,CAACC,MAAO5C,EAAE,qBAChBK,IAAAC,cAACkB,EAAe,CACdqB,aAAW,SACXrC,UAAU,GACVsC,KAAK,QACLnC,QAAS9B,KAAKU,eAEdc,IAAAC,cAACoB,EAAS,KAAC,qBArHvBqB,qBAEElE,KAAKmE,oBAAsBnE,KAAKG,MAAMiE,QAAQC,OAAO,CAACC,EAAUC,KAC1D9D,eACFT,KAAKC,kBAAkB,CAAEO,KAAM,YAInCgE,WAAW,KACTxE,KAAKoD,SAAS,CAAEH,QAAQ,KACvB,KAGLwB,uBACEzE,KAAKmE,sBA+GPxD,SACE,IAAIhC,MAAEA,EAAKe,SAAEA,GAAaM,KAAKG,MAC/B,MAAMuE,EACJhF,EAAS4B,OAAO5B,EAASW,gBAAgBC,YAAY3B,QAAUA,EAEjE,OACE6C,IAAAC,cAACC,IAAgB,CAAC/C,MAAO+F,GACvBlD,IAAAC,cAACkD,IAAY,CAAChG,MAAO+F,EAAchF,SAAUA,IAE7C8B,IAAAC,cAAA,OAAKE,UAAU,WACbH,IAAAC,cAAA,OAAKE,UAAU,kBACX3B,KAAKZ,MAAM6D,QACXzB,IAAAC,cAACmD,WAAQ,KACN5E,KAAKqD,mBACN7B,IAAAC,cAACoD,IAAO,KAAE7E,KAAK2D,oDC7J/B,MAAMmB,EAAqBtG,cAAkBuG,GACvCC,EAAoBxG,cAAkByG,GAmH7BvG,sBAlHAC,IACN,CACLgB,OAAQ,CACNd,gBAAiBF,EAAMG,QAAQoG,WAAWC,WA+Gd,CAAElG,WAAW,GAAhCP,CACbS,YANsBC,IAAK,CAC3BC,kBAAmBC,YAAUC,KAAKC,WAClCE,SAAUN,EAAMO,OAAOD,WAMrB,CAAEL,uBAFJF,CA3GF,cAAsBS,YAAUC,cAAAC,SAAAC,WAAAC,KAkB9BC,kBAAoBC,KAClB,IAAIR,SAAEA,EAAQL,kBAAEA,GAAsBW,KAAKG,MAC3Cd,EAAiBe,wBAAA,GACZV,GAAQ,IACXW,gBAAeD,wBAAA,GACVV,EAASW,iBAAe,IAC3BC,YAAWF,wBAAA,GACNV,EAASW,gBAAgBC,aACzBJ,UAzBXgE,qBACMzD,eACFT,KAAKC,kBAAkB,CAAEO,KAAM,UASnCiE,wBAoBA9D,SACE,IAAIjB,SAAEA,EAAQ0F,QAAEA,EAAOzG,MAAEA,GAAUqB,KAAKG,OAEpCE,gBAAEA,GAAoBX,EAMtB2F,EAAgB,CAClBC,CAACF,EAAQzF,SAAS,EAClB2F,CAAA,GAAAC,OAAI7F,EAAS8F,aAAY,aAAAD,OAAYlF,EAAgBC,YAAYE,QAAS,EAC1EiF,eAAgBpF,EAAgBkB,OAAOmE,OAEzC,OACElE,IAAAC,cAACkE,IAAWC,SAAQ,KACjBC,IAAA,IAACC,OAAEA,GAAQD,EAAA,OACVrE,IAAAC,cAAA,OAAKE,UAAWoE,YAAUV,IAEvBhF,EAAgBC,YAAY0F,MAAQxE,IAAAC,cAACqD,EAAkB,MAExDtD,IAAAC,cAAA,OAAKE,UAAU,kCACZtB,EAAgBkB,OAAOyE,MAAQ3F,EAAgBkB,OAAOmE,OAErDlE,IAAAC,cAACuD,EAAiB,MAGnBtF,EAASuG,kBAQRzE,IAAAC,cAAA,OAAKE,UAAU,sBACZtB,EAAgBkB,OAAOyE,OACrB3F,EAAgBkB,OAAOmE,OAASlE,IAAAC,cAACwD,EAAa,MACjDzD,IAAAC,cAAA,OAAKE,UAAU,WAAWuE,YAAaJ,IACvCtE,IAAAC,cAAA,OAAKE,UAAU,YACdjC,EAASyG,OAAOH,OAAStG,EAASyG,OAAOT,OAASlE,IAAAC,cAAC2E,IAAM,QAI5D1G,EAASuG,kBACTzE,IAAAC,cAAA,OAAKE,UAAU,sBACZtB,EAAgBkB,OAAOyE,OACrB3F,EAAgBkB,OAAOmE,OAASlE,IAAAC,cAACwD,EAAa,MACjDzD,IAAAC,cAAA,OAAKE,UAAU,WAAWuE,YAAaJ,IACvCtE,IAAAC,cAAA,OAAKE,UAAU,YACdjC,EAASyG,OAAOH,OAAStG,EAASyG,OAAOT,OAASlE,IAAAC,cAAC2E,IAAM,OAI7D1G,EAASyG,OAAOH,MAAQtG,EAASyG,OAAOT,OAASlE,IAAAC,cAAC2E,IAAM","file":"static/js/37.f93d5bc5.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport ConstantList from \"../../appConfig\";\r\nimport {\r\n  Icon,\r\n  IconButton,\r\n  Badge,\r\n  MenuItem,\r\n  withStyles,\r\n  MuiThemeProvider\r\n} from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport { setLayoutSettings } from \"app/redux/actions/LayoutActions\";\r\nimport { logoutUser } from \"app/redux/actions/UserActions\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { EgretMenu, EgretSearchBox } from \"egret\";\r\nimport { isMdScreen } from \"utils\";\r\nimport NotificationBar from \"../SharedCompoents/NotificationBar\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ShoppingCart from \"../SharedCompoents/ShoppingCart\";\r\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\r\nimport Select from '@material-ui/core/Select';\r\nimport LanguageSelect from '../SharedCompoents/LanguageSelect';\r\nimport authService from \"../../services/jwtAuthService\";\r\nconst styles = theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.primary.main\r\n  }\r\n});\r\nconst ViewLanguageSelect = withTranslation()(LanguageSelect);\r\n\r\nclass Layout1Topbar extends Component {\r\n  state = {};\r\n\r\n  updateSidebarMode = sidebarSettings => {\r\n    let { settings, setLayoutSettings } = this.props;\r\n\r\n    setLayoutSettings({\r\n      ...settings,\r\n      layout1Settings: {\r\n        ...settings.layout1Settings,\r\n        leftSidebar: {\r\n          ...settings.layout1Settings.leftSidebar,\r\n          ...sidebarSettings\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  handleSidebarToggle = () => {\r\n    let { settings } = this.props;\r\n    let { layout1Settings } = settings;\r\n\r\n    let mode;\r\n    if (isMdScreen()) {\r\n      mode = layout1Settings.leftSidebar.mode === \"close\" ? \"mobile\" : \"close\";\r\n    } else {\r\n      mode = layout1Settings.leftSidebar.mode === \"full\" ? \"close\" : \"full\";\r\n    }\r\n    this.updateSidebarMode({ mode });\r\n  };\r\n\r\n  handleSignOut = () => {\r\n    this.props.logoutUser();\r\n  };\r\n\r\n  render() {\r\n    let imagePath =ConstantList.ROOT_PATH+\"assets/images/avatar.jpg\"\r\n    let user = authService.getLoginUser();\r\n    if(user!=null && user.imagePath!=null){\r\n      imagePath =ConstantList.API_ENPOINT + user.imagePath;\r\n    }\r\n    const { t, i18n } = this.props;\r\n    let { theme, settings } = this.props;\r\n    let language= 'en';\r\n    const changeLanguage = lng => {\r\n      alert(lng);\r\n      i18n.changeLanguage(lng);\r\n      //alert('here');\r\n    };    \r\n\r\n  \r\n    const topbarTheme =\r\n      settings.themes[settings.layout1Settings.topbar.theme] || theme;\r\n    return (\r\n      <MuiThemeProvider theme={topbarTheme}>\r\n        <div className=\"topbar\">\r\n          <div\r\n            className={`topbar-hold`}\r\n            style={{ backgroundColor: topbarTheme.palette.primary.main }}\r\n          >\r\n            <div className=\"flex flex-space-between flex-middle h-100\">\r\n              <div className=\"flex\">\r\n                <IconButton onClick={this.handleSidebarToggle}>\r\n                  <Icon>menu</Icon>\r\n                </IconButton>\r\n\r\n                <div className=\"hide-on-mobile\">\r\n                  {/* <IconButton>\r\n                    <Icon>mail_outline</Icon>\r\n                  </IconButton>\r\n\r\n                  <IconButton>\r\n                    <Icon>web_asset</Icon>\r\n                  </IconButton>\r\n\r\n                  <IconButton>\r\n                    <Icon>star_outline</Icon>\r\n                  </IconButton> */}\r\n                </div>\r\n              </div>\r\n              <div className=\"flex flex-middle\">\r\n                <EgretSearchBox />\r\n                <ViewLanguageSelect/>\r\n                <NotificationBar />\r\n                <ShoppingCart></ShoppingCart>\r\n                {/* <select class=\"form-control language-selector\"  onClick={() => changeLanguage('en')}>\r\n                    <option value=\"de\">Deutsch</option>\r\n                    <option value=\"en\">English</option>\r\n                    <option value=\"fr\">Français</option>\r\n                    <option value=\"it\">Italiano</option>\r\n                </select> */}\r\n                \r\n                <EgretMenu\r\n                  menuButton={\r\n                    <img\r\n                      className=\"mx-8 text-middle circular-image-small cursor-pointer\"\r\n                      src={imagePath}\r\n                      alt=\"user\"\r\n                    />\r\n                  }\r\n                >\r\n                  <MenuItem style={{ minWidth: 185 }}>\r\n                    <Link className=\"flex flex-middle\" to=\"/\">\r\n                      <Icon> home </Icon>\r\n                      <span className=\"pl-16\"> {t('Dashboard.dashboard')} </span>\r\n                    </Link>\r\n                  </MenuItem>\r\n                  <MenuItem style={{ minWidth: 185 }}>\r\n                    <Link\r\n                      className=\"flex flex-middle\"\r\n                      to=\"/page-layouts/user-profile\"\r\n                    >\r\n                      <Icon> person </Icon>\r\n                      <span className=\"pl-16\"> {t('Dashboard.profile')} </span>\r\n                    </Link>\r\n                  </MenuItem>\r\n                  <MenuItem\r\n                    onClick={this.handleSignOut}\r\n                    className=\"flex flex-middle\"\r\n                    style={{ minWidth: 185 }}\r\n                  >\r\n                    <Icon> power_settings_new </Icon>\r\n                    <span className=\"pl-16\"> {t('Dashboard.logout')} </span>\r\n                  </MenuItem>\r\n                </EgretMenu>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nLayout1Topbar.propTypes = {\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  logoutUser: PropTypes.func.isRequired,\r\n  settings: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  logoutUser: PropTypes.func.isRequired,\r\n  settings: state.layout.settings\r\n});\r\n\r\nexport default withStyles(styles, { withTheme: true })(\r\n  withRouter(\r\n    connect(\r\n      mapStateToProps,\r\n      { setLayoutSettings, logoutUser }\r\n    )(Layout1Topbar)\r\n  )\r\n);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Switch,\r\n  Icon,\r\n  withStyles,\r\n  MenuItem,\r\n  Tooltip,\r\n  IconButton,\r\n  MuiThemeProvider\r\n} from \"@material-ui/core\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setLayoutSettings,\r\n  setDefaultSettings\r\n} from \"app/redux/actions/LayoutActions\";\r\nimport { logoutUser } from \"app/redux/actions/UserActions\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { EgretMenu } from \"egret\";\r\nimport Sidenav from \"../SharedCompoents/Sidenav\";\r\nimport Brand from \"../SharedCompoents/Brand\";\r\nimport SidenavTheme from \"../EgretTheme/SidenavTheme\";\r\nimport { isMdScreen } from \"utils\";\r\nimport ConstantList from \"../../appConfig\";\r\nimport { Link } from \"react-router-dom\";\r\nimport authService from \"../../services/jwtAuthService\";\r\nconst styles = theme => ({});\r\n\r\nconst IconButtonWhite = withStyles(theme => ({\r\n  root: {\r\n    // color: theme.palette.getContrastText(purple[500]),\r\n    backgroundColor: \"transparent\",\r\n    padding: \"5px\"\r\n  }\r\n}))(IconButton);\r\n\r\nconst IconSmall = withStyles(() => ({\r\n  root: {\r\n    fontSize: \"1rem\"\r\n  }\r\n}))(Icon);\r\n\r\nclass Layout1Sidenav extends Component {\r\n  state = {\r\n    sidenavToggleChecked: false,\r\n    hidden: true\r\n  };\r\n\r\n  componentWillMount() {\r\n    // CLOSE SIDENAV ON ROUTE CHANGE ON MOBILE\r\n    this.unlistenRouteChange = this.props.history.listen((location, action) => {\r\n      if (isMdScreen()) {\r\n        this.updateSidebarMode({ mode: \"close\" });\r\n      }\r\n    });\r\n\r\n    setTimeout(() => {\r\n      this.setState({ hidden: false });\r\n    }, 400);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unlistenRouteChange();\r\n  }\r\n\r\n  updateSidebarMode = sidebarSettings => {\r\n    let { settings, setLayoutSettings, setDefaultSettings } = this.props;\r\n    const updatedSettings = {\r\n      ...settings,\r\n      layout1Settings: {\r\n        ...settings.layout1Settings,\r\n        leftSidebar: {\r\n          ...settings.layout1Settings.leftSidebar,\r\n          ...sidebarSettings\r\n        }\r\n      }\r\n    };\r\n    setLayoutSettings(updatedSettings);\r\n    setDefaultSettings(updatedSettings);\r\n  };\r\n\r\n  handleSidenavToggle = () => {\r\n    let { sidenavToggleChecked } = this.state;\r\n    let mode = sidenavToggleChecked ? \"full\" : \"compact\";\r\n    this.updateSidebarMode({ mode });\r\n    this.setState({ sidenavToggleChecked: !sidenavToggleChecked });\r\n  };\r\n\r\n  handleSignOut = () => {\r\n    this.props.logoutUser();\r\n  };\r\n\r\n  renderLogoSwitch = () => (\r\n    // Open Brand component file to replace logo and text\r\n    <Brand>\r\n      <Switch\r\n        className=\"sidenav__toggle hide-on-mobile\"\r\n        onChange={this.handleSidenavToggle}\r\n        checked={this.state.sidenavToggleChecked}\r\n        color=\"secondary\"\r\n      />\r\n    </Brand>\r\n  );\r\n\r\n  renderUser = () => {\r\n    const { t, i18n } = this.props;\r\n    //let { user } = this.props;\r\n    let imagePath =ConstantList.ROOT_PATH+\"assets/images/avatar.jpg\"\r\n    //let user = authService.getLoginUser();\r\n\r\n    let user = authService.getLoginUser();\r\n    if(user!=null && user.imagePath!=null){\r\n      imagePath =ConstantList.API_ENPOINT + user.imagePath;\r\n    }\r\n\r\n    if(user!=null && user.imagePath!=null){\r\n      imagePath =ConstantList.API_ENPOINT + user.imagePath;\r\n    }\r\n    return (\r\n      <div className=\"sidenav__user\">\r\n        <div className=\"username-photo\">\r\n          <img src={imagePath} alt=\"user\" />\r\n          <span className=\"username text-center\">\r\n            {user? user.displayName : ''}\r\n            <br/>\r\n            {user? user.username: ''}\r\n          </span>\r\n        </div>\r\n        <div className=\"user__menu\">\r\n          <EgretMenu\r\n          // menuButton={\r\n          //   <Tooltip title=\"Settings\">\r\n          //     <IconButtonWhite aria-label=\"Delete\" className=\"\" size=\"small\">\r\n          //       <IconSmall> settings </IconSmall>\r\n          //     </IconButtonWhite>\r\n          //   </Tooltip>\r\n          // }\r\n          >\r\n            <MenuItem className=\"flex flex-middle\" style={{ minWidth: 185 }}>\r\n              <Icon> home </Icon>\r\n              <span className=\"pl-16\"> {t('Dashboard.dashboard')} </span>\r\n            </MenuItem>\r\n            {/* <MenuItem className=\"flex flex-middle\" style={{ minWidth: 185 }}>\r\n              <Icon> settings </Icon>\r\n              <span className=\"pl-16\"> Account Setting </span>\r\n            </MenuItem> */}\r\n          </EgretMenu>\r\n\r\n          <Tooltip title={t('Dashboard.profile')}>\r\n            <Link\r\n              className=\"flex flex-middle\"\r\n              to=\"/page-layouts/user-profile\"\r\n            >\r\n              <IconButtonWhite aria-label=\"Delete\" className=\"\" size=\"small\">\r\n                <IconSmall>person</IconSmall>\r\n              </IconButtonWhite>\r\n            </Link>\r\n          </Tooltip>\r\n          <Tooltip title={t('Dashboard.logout')}>\r\n            <IconButtonWhite\r\n              aria-label=\"Delete\"\r\n              className=\"\"\r\n              size=\"small\"\r\n              onClick={this.handleSignOut}\r\n            >\r\n              <IconSmall>exit_to_app</IconSmall>\r\n            </IconButtonWhite>\r\n          </Tooltip>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    let { theme, settings } = this.props;\r\n    const sidenavTheme =\r\n      settings.themes[settings.layout1Settings.leftSidebar.theme] || theme;\r\n      \r\n    return (\r\n      <MuiThemeProvider theme={sidenavTheme}>\r\n        <SidenavTheme theme={sidenavTheme} settings={settings} />\r\n\r\n        <div className=\"sidenav\">\r\n          <div className=\"sidenav__hold\">\r\n            {!this.state.hidden && (\r\n              <Fragment>\r\n                {this.renderLogoSwitch()}\r\n                <Sidenav>{this.renderUser()}</Sidenav>\r\n              </Fragment>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nLayout1Sidenav.propTypes = {\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  setDefaultSettings: PropTypes.func.isRequired,\r\n  logoutUser: PropTypes.func.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n  settings: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  setDefaultSettings: PropTypes.func.isRequired,\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  logoutUser: PropTypes.func.isRequired,\r\n  user: state.user,\r\n  settings: state.layout.settings\r\n});\r\n\r\nexport default withStyles(styles, { withTheme: true })(\r\n  withRouter(\r\n    connect(\r\n      mapStateToProps,\r\n      {\r\n        setLayoutSettings,\r\n        setDefaultSettings,\r\n        logoutUser\r\n      }\r\n    )(Layout1Sidenav)\r\n  )\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { setLayoutSettings } from \"app/redux/actions/LayoutActions\";\r\nimport { withStyles } from \"@material-ui/core\";\r\nimport Scrollbar from \"react-perfect-scrollbar\";\r\nimport { isMdScreen, classList } from \"utils\";\r\nimport { renderRoutes } from \"react-router-config\";\r\nimport Layout1Topbar from \"./Layout1Topbar\";\r\nimport Layout1Sidenav from \"./Layout1Sidenav\";\r\nimport Footer from \"../SharedCompoents/Footer\";\r\nimport SecondarySidebar from \"../SharedCompoents/SecondarySidebar\";\r\nimport AppContext from \"app/appContext\";\r\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\r\n// import {EgretLoadable} from \"egret\";\r\n\r\n// const SecondarySidebar = EgretLoadable({\r\n//   loader: () => import(\"../SharedCompoents/SecondarySidebar\")\r\n// });\r\n\r\n// const Footer = EgretLoadable({\r\n//   loader: () => import(\"../SharedCompoents/Footer\")\r\n// });\r\n\r\n// const Layout1Topbar = EgretLoadable({\r\n//   loader: () => import(\"./Layout1Topbar\")\r\n// });\r\n\r\n// const Layout1Sidenav = EgretLoadable({\r\n//   loader: () => import(\"./Layout1Sidenav\")\r\n// });\r\nconst ViewLayout1Sidenav = withTranslation()(Layout1Sidenav);\r\nconst ViewLayout1Topbar = withTranslation()(Layout1Topbar);\r\nconst styles = theme => {\r\n  return {\r\n    layout: {\r\n      backgroundColor: theme.palette.background.default\r\n    }\r\n  };\r\n};\r\n\r\nclass Layout1 extends Component {\r\n  componentWillMount() {\r\n    if (isMdScreen()) {\r\n      this.updateSidebarMode({ mode: \"close\" });\r\n    }\r\n    // if (window) {\r\n    //   // SET DIRECTION\r\n    //   let { settings } = this.props;\r\n    //   document.body.setAttribute(\"dir\", settings.direction);\r\n    // }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // if (window) {\r\n    //   document.body.removeAttribute(\"dir\");\r\n    // }\r\n  }\r\n\r\n  updateSidebarMode = sidebarSettings => {\r\n    let { settings, setLayoutSettings } = this.props;\r\n    setLayoutSettings({\r\n      ...settings,\r\n      layout1Settings: {\r\n        ...settings.layout1Settings,\r\n        leftSidebar: {\r\n          ...settings.layout1Settings.leftSidebar,\r\n          ...sidebarSettings\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let { settings, classes, theme } = this.props;\r\n\r\n    let { layout1Settings } = settings;\r\n    // let layoutClasses = {\r\n    //   [classes.layout]: true,\r\n    //   [`${settings.activeLayout} sidenav-${layout1Settings.leftSidebar.mode} theme-${theme.palette.type} flex`]: true,\r\n    //   \"topbar-fixed\": layout1Settings.topbar.fixed\r\n    // };\r\n    let layoutClasses = {\r\n      [classes.layout]: true,\r\n      [`${settings.activeLayout} sidenav-${layout1Settings.leftSidebar.mode}`]: true,\r\n      \"topbar-fixed\": layout1Settings.topbar.fixed\r\n    };    \r\n    return (\r\n      <AppContext.Consumer>\r\n        {({ routes }) => (\r\n          <div className={classList(layoutClasses)}>\r\n            \r\n            {layout1Settings.leftSidebar.show && <ViewLayout1Sidenav />}\r\n\r\n            <div className=\"content-wrap position-relative\">\r\n              {layout1Settings.topbar.show && layout1Settings.topbar.fixed && (\r\n                // <Layout1Topbar />\r\n                <ViewLayout1Topbar/>\r\n              )}\r\n\r\n              {settings.perfectScrollbar && (\r\n                // <Scrollbar className=\"scrollable-content\">\r\n                //   {layout1Settings.topbar.show &&\r\n                //     !layout1Settings.topbar.fixed && <Layout1Topbar />}\r\n                //   <div className=\"content\">{renderRoutes(routes)}</div>\r\n                //   <div className=\"my-auto\" />\r\n                //   {settings.footer.show && !settings.footer.fixed && <Footer />}\r\n                // </Scrollbar>\r\n                <div className=\"scrollable-content\">\r\n                  {layout1Settings.topbar.show &&\r\n                    !layout1Settings.topbar.fixed && <Layout1Topbar />}\r\n                  <div className=\"content\">{renderRoutes(routes)}</div>\r\n                  <div className=\"my-auto\" />\r\n                  {settings.footer.show && !settings.footer.fixed && <Footer />}\r\n                </div>                \r\n              )}\r\n\r\n              {!settings.perfectScrollbar && (\r\n                <div className=\"scrollable-content\">\r\n                  {layout1Settings.topbar.show &&\r\n                    !layout1Settings.topbar.fixed && <Layout1Topbar />}\r\n                  <div className=\"content\">{renderRoutes(routes)}</div>\r\n                  <div className=\"my-auto\" />\r\n                  {settings.footer.show && !settings.footer.fixed && <Footer />}\r\n                </div>\r\n              )}\r\n\r\n              {settings.footer.show && settings.footer.fixed && <Footer />}\r\n            </div>\r\n            {/* {settings.secondarySidebar.show && <SecondarySidebar />} */}\r\n            \r\n          </div>\r\n        )}\r\n      </AppContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nLayout1.propTypes = {\r\n  settings: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  settings: state.layout.settings\r\n});\r\n\r\nexport default withStyles(styles, { withTheme: true })(\r\n  connect(\r\n    mapStateToProps,\r\n    { setLayoutSettings }\r\n  )(Layout1)\r\n);\r\n"],"sourceRoot":""}