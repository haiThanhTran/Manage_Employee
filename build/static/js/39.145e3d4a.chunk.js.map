{"version":3,"sources":["app/views/sessions/ForgotPassword.jsx"],"names":["withRouter","connect","state","resetPassword","PropTypes","func","isRequired","login","Component","constructor","props","super","this","email","handleChange","event","persist","setState","[object Object]","target","name","value","handleFormSubmit","_objectSpread","render","t","i18n","React","createElement","className","Card","Grid","container","item","lg","md","sm","xs","src","alt","ValidatorForm","ref","onSubmit","TextValidator","variant","label","onChange","type","validators","errorMessages","Button","color","onClick","history","push","ConstantList","ROOT_PATH"],"mappings":"uNA6FeA,sBACbC,YALsBC,IAAK,CAC3BC,cAAeC,YAAUC,KAAKC,WAC9BC,MAAOL,EAAMK,QAKX,CAAEJ,mBAFJF,CA7EF,cAA6BO,YAC3BC,YAAYC,GACVC,MAAMD,GAAOE,KAEfV,MAAQ,CACNW,MAAO,IACRD,KACDE,aAAeC,KACbA,EAAMC,UACNJ,KAAKK,SAAS,CACZC,CAACH,EAAMI,OAAOC,MAAOL,EAAMI,OAAOE,UAErCT,KACDU,iBAAmB,MACjBV,KAAKF,MAAMP,cAAaoB,YAAA,GAAMX,KAAKV,UAErCsB,SACE,MAAMC,EAAEA,EAACC,KAAEA,GAASd,KAAKF,MACzB,IAAIG,MAAEA,GAAUD,KAAKV,MAErB,OACEyB,IAAAC,cAAA,OAAKC,UAAU,yCACbF,IAAAC,cAAA,OAAKC,UAAU,OACbF,IAAAC,cAACE,IAAI,CAACD,UAAU,0CACdF,IAAAC,cAACG,IAAI,CAACC,WAAS,GACbL,IAAAC,cAACG,IAAI,CAACE,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,IAClCV,IAAAC,cAAA,OAAKC,UAAU,2CACbF,IAAAC,cAAA,OAAKU,IAAI,2CAA2CC,IAAI,OAG5DZ,IAAAC,cAACG,IAAI,CAACE,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,IAClCV,IAAAC,cAAA,OAAKC,UAAU,8CACbF,IAAAC,cAACY,gBAAa,CAACC,IAAI,OAAOC,SAAU9B,KAAKU,kBACvCK,IAAAC,cAACe,gBAAa,CACZd,UAAU,cACVe,QAAQ,WACRC,MAAM,QACNC,SAAUlC,KAAKE,aACfiC,KAAK,QACL3B,KAAK,QACLC,MAAOR,EACPmC,WAAY,CAAC,WAAY,WACzBC,cAAe,CACbxB,EAAE,kCACFA,EAAE,wCAGNE,IAAAC,cAAA,OAAKC,UAAU,oBACbF,IAAAC,cAACsB,IAAM,CAACN,QAAQ,YAAYO,MAAM,UAAUJ,KAAK,UAC9CtB,EAAE,kBAELE,IAAAC,cAAA,QAAMC,UAAU,eAAeJ,EAAE,OACjCE,IAAAC,cAACsB,IAAM,CACLrB,UAAU,aACVe,QAAQ,YACRQ,QAASA,IACPxC,KAAKF,MAAM2C,QAAQC,KAAKC,IAAaC,UAAU,mBAE9C/B,EAAE","file":"static/js/39.145e3d4a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport ConstantList from \"../../appConfig\";\r\nimport {\r\n  Card,\r\n  Grid,\r\n  Button,\r\n  withStyles,\r\n  CircularProgress\r\n} from \"@material-ui/core\";\r\nimport { TextValidator, ValidatorForm } from \"react-material-ui-form-validator\";\r\nimport { connect } from \"react-redux\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { useTranslation } from 'react-i18next';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { resetPassword } from \"../../redux/actions/LoginActions\";\r\n\r\nclass ForgotPassword extends Component {\r\n  constructor(props){\r\n    super(props);\r\n  };\r\n  state = {\r\n    email: \"\"\r\n  };\r\n  handleChange = event => {\r\n    event.persist();\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n  handleFormSubmit = () => {\r\n    this.props.resetPassword({ ...this.state });\r\n  };\r\n  render() {\r\n    const { t, i18n } = this.props;\r\n    let { email } = this.state;\r\n\r\n    return (\r\n      <div className=\"signup flex flex-center w-100 h-100vh\">\r\n        <div className=\"p-8\">\r\n          <Card className=\"signup-card position-relative y-center\">\r\n            <Grid container>\r\n              <Grid item lg={5} md={5} sm={5} xs={12}>\r\n                <div className=\"p-32 flex flex-center flex-middle h-100\">\r\n                  <img src=\"/assets/images/illustrations/dreamer.svg\" alt=\"\" />\r\n                </div>\r\n              </Grid>\r\n              <Grid item lg={7} md={7} sm={7} xs={12}>\r\n                <div className=\"p-36 h-100 bg-light-gray position-relative\">\r\n                  <ValidatorForm ref=\"form\" onSubmit={this.handleFormSubmit}>\r\n                    <TextValidator\r\n                      className=\"mb-24 w-100\"\r\n                      variant=\"outlined\"\r\n                      label=\"Email\"\r\n                      onChange={this.handleChange}\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      value={email}\r\n                      validators={[\"required\", \"isEmail\"]}\r\n                      errorMessages={[\r\n                        t(\"general.errorMessages_required\"),\r\n                        t(\"general.errorMessages_email_valid\")\r\n                      ]}\r\n                    />\r\n                    <div className=\"flex flex-middle\">\r\n                      <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                        {t(\"resetPassword\")}\r\n                      </Button>\r\n                      <span className=\"ml-16 mr-16\">{t(\"or\")}</span>\r\n                      <Button\r\n                        className=\"capitalize\"\r\n                        variant=\"contained\"\r\n                        onClick={() =>\r\n                          this.props.history.push(ConstantList.ROOT_PATH+\"session/signin\")\r\n                        }>\r\n                          {t(\"sign_in.title\")}\r\n                      </Button>\r\n                    </div>\r\n                  </ValidatorForm>\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  resetPassword: PropTypes.func.isRequired,\r\n  login: state.login\r\n});\r\nexport default withRouter(\r\n  connect(\r\n    mapStateToProps,\r\n    { resetPassword }\r\n  )(ForgotPassword)\r\n);\r\n"],"sourceRoot":""}