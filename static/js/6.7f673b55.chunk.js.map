{"version":3,"sources":["app/EgretLayout/SharedCompoents/ShoppingCart.jsx","app/EgretLayout/SharedCompoents/NotificationBar.jsx","app/EgretLayout/SharedCompoents/LanguageSelect.jsx","app/EgretLayout/SharedCompoents/Sidenav.jsx","app/navigations.js","app/EgretLayout/SharedCompoents/Brand.jsx","app/EgretLayout/EgretTheme/SidenavTheme.jsx","app/EgretLayout/SharedCompoents/Footer.jsx","app/EgretLayout/SharedCompoents/EgretCustomizer/BadgeSelected.jsx","app/EgretLayout/SharedCompoents/EgretCustomizer/customizerOptions.js","app/EgretLayout/SharedCompoents/EgretCustomizer/Layout1Customizer.jsx","app/EgretLayout/SharedCompoents/EgretCustomizer/Layout2Customizer.jsx","app/EgretLayout/SharedCompoents/EgretCustomizer/EgretCustomizer.jsx","app/EgretLayout/SharedCompoents/SecondarySidebar.jsx"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_material_ui_core__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core__WEBPACK_IMPORTED_MODULE_3__","_material_ui_core__WEBPACK_IMPORTED_MODULE_4__","_material_ui_styles__WEBPACK_IMPORTED_MODULE_5__","prop_types__WEBPACK_IMPORTED_MODULE_6__","react_redux__WEBPACK_IMPORTED_MODULE_7__","app_redux_actions_EcommerceActions__WEBPACK_IMPORTED_MODULE_8__","cartListLoaded","withStyles","withTheme","connect","state","settings","layout","getCartList","PropTypes","func","isRequired","deleteProductFromCart","updateCartAmount","cartList","ecommerce","user","props","container","theme","panelOpen","setPanelOpen","React","useState","userId","palette","createElement","MuiThemeProvider","themes","activeTheme","Drawer","variant","anchor","open","onClose","ModalProps","keepMounted","className","Icon","color","map","product","key","id","IconButton","size","onClick","amount","disabled","src","imgUrl","alt","title","price","fontSize","_material_ui_styles__WEBPACK_IMPORTED_MODULE_2__","prop_types__WEBPACK_IMPORTED_MODULE_4__","react_redux__WEBPACK_IMPORTED_MODULE_5__","_redux_actions_NotificationActions__WEBPACK_IMPORTED_MODULE_6__","getNotification","deleteNotification","deleteAllNotification","notification","notifcationList","_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core_Input__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core_InputLabel__WEBPACK_IMPORTED_MODULE_3__","_material_ui_core_MenuItem__WEBPACK_IMPORTED_MODULE_4__","_material_ui_core_FormHelperText__WEBPACK_IMPORTED_MODULE_5__","_material_ui_core_FormControl__WEBPACK_IMPORTED_MODULE_6__","_material_ui_core_Select__WEBPACK_IMPORTED_MODULE_7__","root","display","flexWrap","formControl","margin","spacing","unit","minWidth","selectEmpty","marginTop","Component","constructor","super","arguments","this","selected","hasError","handleChange","value","t","i18n","classes","changeLanguage","setState","render","autoComplete","FormControl","error","InputLabel","htmlFor","Select","name","onChange","event","target","input","Input","MenuItem","FormHelperText","ViewEgretVerticalNav","withTranslation","EgretVerticalNav","withRouter","setLayoutSettings","updateSidebarMode","sidebarSettings","activeLayoutSettingsName","activeLayout","activeLayoutSettings","_objectSpread","[object Object]","leftSidebar","renderOverlay","mode","getNavigation","navigation","localStorageService","getLocalStorageItem","length","navigations","Fragment","Scrollbar","option","suppressScrollX","children","d","__webpack_exports__","_appConfig__WEBPACK_IMPORTED_MODULE_0__","_appConfig__WEBPACK_IMPORTED_MODULE_0___default","_auth_authRoles__WEBPACK_IMPORTED_MODULE_1__","isVisible","icon","role","authRoles","path","ConstantList","ROOT_PATH","manage","_appConfig__WEBPACK_IMPORTED_MODULE_1__","_appConfig__WEBPACK_IMPORTED_MODULE_1___default","react_router_dom__WEBPACK_IMPORTED_MODULE_2__","Brand","Link","to","HOME_PAGE","react_helmet__WEBPACK_IMPORTED_MODULE_1__","SidenavTheme","_ref","Helmet","concat","type","text","secondary","layout1Settings","bgImgURL","primary","main","bgOpacity","react_redux__WEBPACK_IMPORTED_MODULE_4__","react_helmet__WEBPACK_IMPORTED_MODULE_5__","footerTheme","footer","contrastText","href","Button","BadgeSelected","badge","top","right","height","width","borderRadius","Badge","mainThemes","mainSidebarThemes","topbarThemes","sidebarBG","Layout1Customizer","handleControlChange","i","Tooltip","placement","style","backgroundColor","themeColors","topbar","component","FormLabel","RadioGroup","aria-label","FormControlLabel","control","Radio","label","bg","badgeContent","invisible","Paper","Slider","marks","step","max","min","valueLabelDisplay","aria-labelledby","FormGroup","Switch","checked","get","Layout2Customizer","Object","keys","layout2Settings","navbar","paper","setDefaultSettings","updateSettings","newSettings","updatedSettings","merge","selectLayout","set","controlValue","tooglePanel","background","default","minHeight","options","elevation","secondarySidebar","position","bottom","flexDirection","alignItems","justifyContent","boxShadow","shadows","zIndex","transition","&.open","& .toggle","left","toggle","listenWindowResize","debounce","isMobile","componentWillMount","window","listenWindowResizeRef","addEventListener","componentWillUnmount","removeEventListener","secondarySidebarTheme","classList","secondary-sidebar","EgretCustomizer","ShoppingCart","Fab"],"mappings":"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","file":"static/js/6.7f673b55.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Icon,\r\n  Badge,\r\n  MuiThemeProvider,\r\n  IconButton,\r\n  Drawer\r\n} from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getCartList,\r\n  deleteProductFromCart,\r\n  updateCartAmount\r\n} from \"app/redux/actions/EcommerceActions\";\r\n\r\nlet cartListLoaded = false;\r\n\r\nfunction ShoppingCart(props) {\r\n  const {\r\n    container,\r\n    theme,\r\n    settings,\r\n    cartList = [],\r\n    getCartList,\r\n    deleteProductFromCart,\r\n    updateCartAmount,\r\n    user\r\n  } = props;\r\n\r\n  const [panelOpen, setPanelOpen] = React.useState(false);\r\n\r\n  if (!cartListLoaded) {\r\n    getCartList(user.userId);\r\n    cartListLoaded = true;\r\n  }\r\n\r\n  function handleDrawerToggle() {\r\n    setPanelOpen(!panelOpen);\r\n  }\r\n\r\n  const parentThemePalette = theme.palette;\r\n\r\n  return (\r\n    <MuiThemeProvider theme={settings.themes[settings.activeTheme]}>\r\n      {/* <IconButton\r\n        onClick={handleDrawerToggle}\r\n        style={{\r\n          color:\r\n            parentThemePalette.type === \"light\"\r\n              ? parentThemePalette.text.secondary\r\n              : parentThemePalette.text.primary\r\n        }}\r\n      >\r\n        <Badge color=\"secondary\" badgeContent={cartList.length}>\r\n          <Icon>shopping_cart</Icon>\r\n        </Badge>\r\n      </IconButton> */}\r\n\r\n      <Drawer\r\n        container={container}\r\n        variant=\"temporary\"\r\n        anchor={\"right\"}\r\n        open={panelOpen}\r\n        onClose={handleDrawerToggle}\r\n        ModalProps={{\r\n          keepMounted: true\r\n        }}\r\n      >\r\n        <div className=\"mini-cart\">\r\n          <div className=\"cart__topbar flex flex-middle p-16 mb-24\">\r\n            <Icon color=\"primary\">shopping_cart</Icon>\r\n            <h5 className=\"ml-8 my-0 font-weight-500\">Cart</h5>\r\n          </div>\r\n\r\n          {cartList.map(product => (\r\n            <div\r\n              key={product.id}\r\n              className=\"mini-cart__item flex flex-middle flex-space-between py-16 px-8\"\r\n            >\r\n              <div className=\"flex flex-column mr-8\">\r\n                <IconButton\r\n                  size=\"small\"\r\n                  onClick={() =>\r\n                    updateCartAmount(\r\n                      user.userId,\r\n                      product.id,\r\n                      product.amount + 1\r\n                    )\r\n                  }\r\n                >\r\n                  <Icon className=\"cursor-pointer\">keyboard_arrow_up</Icon>\r\n                </IconButton>\r\n                <IconButton\r\n                  disabled={!(product.amount - 1)}\r\n                  size=\"small\"\r\n                  onClick={() =>\r\n                    updateCartAmount(\r\n                      user.userId,\r\n                      product.id,\r\n                      product.amount - 1\r\n                    )\r\n                  }\r\n                >\r\n                  <Icon className=\"cursor-pointer\">keyboard_arrow_down</Icon>\r\n                </IconButton>\r\n              </div>\r\n              <div className=\"mr-8\">\r\n                <img src={product.imgUrl} alt={product.title} />\r\n              </div>\r\n              <div className=\"mr-8 text-center\">\r\n                <h6 className=\"m-0 mb-4\">{product.title}</h6>\r\n                <small className=\"text-muted\">\r\n                  ${product.price} x {product.amount}\r\n                </small>\r\n              </div>\r\n              <IconButton\r\n                size=\"small\"\r\n                onClick={() => deleteProductFromCart(user.userId, product.id)}\r\n              >\r\n                <Icon fontSize=\"small\">clear</Icon>\r\n              </IconButton>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </Drawer>\r\n    </MuiThemeProvider>\r\n  );\r\n}\r\n\r\nShoppingCart.propTypes = {\r\n  settings: PropTypes.object.isRequired,\r\n  cartList: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  settings: state.layout.settings,\r\n  getCartList: PropTypes.func.isRequired,\r\n  deleteProductFromCart: PropTypes.func.isRequired,\r\n  updateCartAmount: PropTypes.func.isRequired,\r\n  cartList: state.ecommerce.cartList,\r\n  user: state.user\r\n});\r\n\r\nexport default withStyles({}, { withTheme: true })(\r\n  connect(\r\n    mapStateToProps,\r\n    { getCartList, deleteProductFromCart, updateCartAmount }\r\n  )(ShoppingCart)\r\n);\r\n","import React from \"react\";\r\nimport {\r\n  Icon,\r\n  Badge,\r\n  MuiThemeProvider,\r\n  Card,\r\n  Button,\r\n  IconButton,\r\n  Drawer,\r\n  Fab\r\n} from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport { getTimeDifference } from \"utils.js\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getNotification,\r\n  deleteAllNotification,\r\n  deleteNotification\r\n} from \"../../redux/actions/NotificationActions\";\r\n\r\nfunction NotificationBar(props) {\r\n  const {\r\n    container,\r\n    theme,\r\n    settings,\r\n    notification: notifcationList = [],\r\n    getNotification,\r\n    deleteAllNotification,\r\n    deleteNotification\r\n  } = props;\r\n\r\n  const [panelOpen, setPanelOpen] = React.useState(false);\r\n\r\n  function handleDrawerToggle() {\r\n    if (!panelOpen) {\r\n      getNotification();\r\n    }\r\n    setPanelOpen(!panelOpen);\r\n  }\r\n  const parentThemePalette = theme.palette;\r\n  // console.log(theme);\r\n\r\n  return (\r\n    <MuiThemeProvider theme={settings.themes[settings.activeTheme]}>\r\n      {/* <IconButton\r\n        onClick={handleDrawerToggle}\r\n        style={{\r\n          color:\r\n            parentThemePalette.type === \"light\"\r\n              ? parentThemePalette.text.secondary\r\n              : parentThemePalette.text.primary\r\n        }}\r\n      >\r\n        <Badge color=\"secondary\" badgeContent={5}>\r\n          <Icon>notifications</Icon>\r\n        </Badge>\r\n      </IconButton> */}\r\n\r\n      {/* <Drawer\r\n        width={\"100px\"}\r\n        container={container}\r\n        variant=\"temporary\"\r\n        anchor={\"right\"}\r\n        open={panelOpen}\r\n        onClose={handleDrawerToggle}\r\n        ModalProps={{\r\n          keepMounted: true\r\n        }}\r\n      >\r\n        <div className=\"notification\">\r\n          <div className=\"notification__topbar flex flex-middle p-16 mb-24\">\r\n            <Icon color=\"primary\">notifications</Icon>\r\n            <h5 className=\"ml-8 my-0 font-weight-500\">Notifications</h5>\r\n          </div>\r\n\r\n          {notifcationList.map(notification => (\r\n            <div\r\n              key={notification.id}\r\n              className=\"notification__card position-relative\"\r\n            >\r\n              <IconButton\r\n                size=\"small\"\r\n                className=\"delete-button bg-light-gray mr-24\"\r\n                onClick={() => deleteNotification(notification.id)}\r\n              >\r\n                <Icon className=\"text-muted\" fontSize=\"small\">\r\n                  clear\r\n                </Icon>\r\n              </IconButton>\r\n              <Link to={`/${notification.path}`} onClick={handleDrawerToggle}>\r\n                <Card className=\"mx-16 mb-24\" elevation={3}>\r\n                  <div className=\"card__topbar flex flex-middle flex-space-between p-8 bg-light-gray\">\r\n                    <div className=\"flex\">\r\n                      <div className=\"card__topbar__button\">\r\n                        <Icon\r\n                          className=\"card__topbar__icon\"\r\n                          fontSize=\"small\"\r\n                          color={notification.icon.color}\r\n                        >\r\n                          {notification.icon.name}\r\n                        </Icon>\r\n                      </div>\r\n                      <span className=\"ml-4 font-weight-500 text-muted\">\r\n                        {notification.heading}\r\n                      </span>\r\n                    </div>\r\n                    <small className=\"card__topbar__time text-muted\">\r\n                      {getTimeDifference(new Date(notification.timestamp))} ago\r\n                    </small>\r\n                  </div>\r\n                  <div className=\"px-16 pt-8 pb-16\">\r\n                    <p className=\"m-0\">{notification.title}</p>\r\n                    <small className=\"text-muted\">\r\n                      {notification.subtitle}\r\n                    </small>\r\n                  </div>\r\n                </Card>\r\n              </Link>\r\n            </div>\r\n          ))}\r\n\r\n          <div className=\"text-center\">\r\n            <Button onClick={deleteAllNotification}>Clear Notifications</Button>\r\n          </div>\r\n        </div>\r\n      </Drawer> */}\r\n    </MuiThemeProvider>\r\n  );\r\n}\r\n\r\nNotificationBar.propTypes = {\r\n  settings: PropTypes.object.isRequired,\r\n  notification: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  getNotification: PropTypes.func.isRequired,\r\n  deleteNotification: PropTypes.func.isRequired,\r\n  deleteAllNotification: PropTypes.func.isRequired,\r\n  notification: state.notification,\r\n  settings: state.layout.settings\r\n});\r\n\r\nexport default withStyles({}, { withTheme: true })(\r\n  connect(\r\n    mapStateToProps,\r\n    { getNotification, deleteNotification, deleteAllNotification }\r\n  )(NotificationBar)\r\n);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing.unit,\r\n    minWidth: 120\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing.unit * 2\r\n  }\r\n});\r\n\r\nclass LanguageSelect extends React.Component {\r\n\r\n\r\n  state = {\r\n    selected: 'vi',\r\n    hasError: false\r\n  };\r\n\r\n  handleChange(value) {\r\n    //alert(t('description.part1'));\r\n    const { t, i18n,classes } = this.props;\r\n    i18n.changeLanguage(value);\r\n    this.setState({ selected: value });\r\n  }\r\n  render() {\r\n    const { t, i18n,classes } = this.props;\r\n    const { selected, hasError } = this.state;\r\n    let language= 'vi';\r\n    const changeLanguage = lng => {\r\n      i18n.changeLanguage(lng);\r\n    };  \r\n    return (\r\n      <form className={classes.root} autoComplete=\"off\">\r\n        <FormControl className={classes.formControl} error={hasError}>\r\n          <InputLabel htmlFor=\"name\">{t('general.language')}</InputLabel>\r\n          <Select\r\n            name=\"name\"\r\n            value={selected}\r\n            onChange={event => this.handleChange(event.target.value)}\r\n            input={<Input id=\"name\" />}\r\n          >\r\n            <MenuItem value=\"vi\">Tiếng Việt</MenuItem>\r\n            {/* <MenuItem value=\"de\">Deutsch</MenuItem> */}\r\n            {/* <MenuItem value=\"en\">English</MenuItem> */}\r\n          </Select>\r\n          {hasError && <FormHelperText>This is required!</FormHelperText>}\r\n        </FormControl>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nLanguageSelect.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(LanguageSelect);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport Scrollbar from \"react-perfect-scrollbar\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { navigations } from \"../../navigations\";\r\nimport { EgretVerticalNav } from \"egret\";\r\nimport { setLayoutSettings } from \"app/redux/actions/LayoutActions\";\r\nimport ConstantList from \"../../appConfig\";\r\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\r\nimport JwtAuthService from \"../../services/jwtAuthService\";\r\nimport localStorageService from \"../../services/localStorageService\";\r\nconst ViewEgretVerticalNav = withTranslation()(EgretVerticalNav);\r\nclass Sidenav extends Component {\r\n  state = {};\r\n  updateSidebarMode = sidebarSettings => {\r\n    let { settings, setLayoutSettings } = this.props;\r\n    let activeLayoutSettingsName = settings.activeLayout+\"Settings\";\r\n    let activeLayoutSettings = settings[activeLayoutSettingsName];\r\n\r\n    setLayoutSettings({\r\n      ...settings,\r\n      [activeLayoutSettingsName]: {\r\n        ...activeLayoutSettings,\r\n        leftSidebar: {\r\n          ...activeLayoutSettings.leftSidebar,\r\n          ...sidebarSettings\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  renderOverlay = () => (\r\n    <div\r\n      onClick={() => this.updateSidebarMode({ mode: \"close\" })}\r\n      className=\"sidenav__overlay\"\r\n    />\r\n  );\r\n  getNavigation(){\r\n    //let navigation=localStorageService.getSessionItem(\"navigations\");\r\n    let navigation=localStorageService.getLocalStorageItem(\"navigations\");\r\n    if(navigation && navigation.length>0){\r\n      return navigation;\r\n    }else {\r\n      return navigations;\r\n    }\r\n    \r\n  }\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Scrollbar option={{suppressScrollX: true}} className=\"scrollable position-relative\">\r\n          {this.props.children}\r\n          <ViewEgretVerticalNav navigation={this.getNavigation()} />\r\n        </Scrollbar>\r\n        {this.renderOverlay()}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\nSidenav.propTypes = {\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  settings: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  settings: state.layout.settings\r\n});\r\nexport default withRouter(\r\n  connect(\r\n    mapStateToProps,\r\n    {\r\n      setLayoutSettings\r\n    }\r\n  )(Sidenav)\r\n);","import ConstantList from \"./appConfig\";\r\nimport { authRoles } from \"./auth/authRoles\";\r\nexport const navigations = [\r\n\r\n  \r\n  {\r\n    name: \"Dashboard.manage\",\r\n    isVisible: true,\r\n    icon: \"engineering\",\r\n    role: authRoles.user,\r\n    children: [\r\n      // {\r\n      //   name: \"Dashboard.eQAActivityLog\",\r\n      //   isVisible:true,\r\n      //   path: ConstantList.ROOT_PATH + \"user_manager/activity_log\",\r\n      //   icon: \"keyboard_arrow_right\"\r\n      // },\r\n      {\r\n        name: \"Thêm Nhân Viên\",\r\n        isVisible: true,\r\n        path: ConstantList.ROOT_PATH + \"add_employee\",\r\n        icon: \"keyboard_arrow_right\",\r\n        role: authRoles.user,\r\n      },\r\n      {\r\n        name: \"Quản Lý Nhân Viên\",\r\n        isVisible: true,\r\n        path: ConstantList.ROOT_PATH + \"manage_employee\",\r\n        icon: \"keyboard_arrow_right\",\r\n        role: authRoles.user,\r\n      },\r\n      {\r\n        name: \"Kết Thúc Nhân Viên\",\r\n        isVisible: true,\r\n        path: ConstantList.ROOT_PATH + \"end_employee\",\r\n        icon: \"keyboard_arrow_right\",\r\n        role: authRoles.user,\r\n      },\r\n      // {\r\n      //   name: \"Tỉnh\",\r\n      //   isVisible: true,\r\n      //   path: ConstantList.ROOT_PATH + \"province\",\r\n      //   icon: \"keyboard_arrow_right\",\r\n      // },\r\n      // {\r\n      //   name: \"Huyện\",\r\n      //   isVisible: true,\r\n      //   path: ConstantList.ROOT_PATH + \"district\",\r\n      //   icon: \"keyboard_arrow_right\",\r\n      // },\r\n      // {\r\n      //   name: \"Xã\",\r\n      //   isVisible: true,\r\n      //   path: ConstantList.ROOT_PATH + \"ward\",\r\n      //   icon: \"keyboard_arrow_right\",\r\n      // },\r\n    ],\r\n  },\r\n  {\r\n    name: \"Lãnh đạo\",\r\n    icon: \"dashboard\",\r\n    path: \"\",\r\n    isVisible: true,\r\n    role: authRoles.manage,\r\n    children: [\r\n      {\r\n        name: \"Lãnh đạo chờ duyệt\",\r\n        role: authRoles.manage,\r\n        path: ConstantList.ROOT_PATH + \"leader_waiting\",\r\n        icon: \"keyboard_arrow_right\",\r\n        isVisible: true,\r\n      },\r\n      {\r\n        name: \"Lãnh đạo đã duyệt\",\r\n        role: authRoles.manage,\r\n        path: ConstantList.ROOT_PATH + \"leader_approved\",\r\n        icon: \"keyboard_arrow_right\",\r\n        isVisible: true,\r\n      },\r\n    ],\r\n  },\r\n];\r\n","import React, { Component } from \"react\";\r\nimport ConstantList from \"../../appConfig\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Helmet } from 'react-helmet';\r\nclass Brand extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div className=\"flex flex-middle flex-space-between brand-area\">\r\n        {/* <div className=\"flex flex-middle brand\">       \r\n          <Link to={ConstantList.HOME_PAGE}>\r\n             <img src= {ConstantList.ROOT_PATH+ \"assets/images/logo-paster.png\"} alt=\"company-logo\" />         \r\n          </Link>\r\n          <span className=\"brand__text\">PASTEUR EQA</span>\r\n        </div> */}\r\n        <div className=\"flex flex-middle brand logo-menu\">\r\n          <Link to={ConstantList.HOME_PAGE}>\r\n            <span className=\"brand__text\">Fashion Store</span>\r\n          </Link>\r\n        </div>\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Brand;\r\n","import React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst SidenavTheme = ({ theme, settings }) => {\r\n\r\n  function darkHoverStyle() {\r\n    return theme.palette.type === \"dark\"\r\n      ? `.navigation .nav-item:hover,\r\n        .navigation .nav-item.active {\r\n          color: ${theme.palette.text.primary};\r\n        }`\r\n      : \"\";\r\n  }\r\n\r\n  function lightHoverStyle() {\r\n    return theme.palette.type === \"light\"\r\n      ? `.navigation .nav-item:hover,\r\n        .navigation .nav-item.active,\r\n        .navigation .submenu {\r\n          background: rgba(0, 0, 0, .08);\r\n        }`\r\n      : \"\";\r\n  }\r\n\r\n  return (\r\n    <Helmet>\r\n      <style>\r\n        {`\r\n        \r\n        ${\r\n          theme.palette.type === \"dark\"\r\n            ? `.sidenav {\r\n          color: ${theme.palette.text.secondary};\r\n        }`\r\n            : \" \"\r\n        }\r\n\r\n        .sidenav__hold {\r\n          background-image: url(${\r\n            settings.layout1Settings.leftSidebar.bgImgURL\r\n          });\r\n          opacity: 1 !important;\r\n        }\r\n        .sidenav__hold::after {\r\n          background: ${theme.palette.primary.main};\r\n          opacity: ${settings.layout1Settings.leftSidebar.bgOpacity};\r\n        }\r\n\r\n        ${lightHoverStyle()}\r\n        ${darkHoverStyle()}\r\n        \r\n      `}\r\n      </style>\r\n    </Helmet>\r\n  );\r\n};\r\n\r\nexport default SidenavTheme;\r\n","import React from \"react\";\r\nimport { withStyles, MuiThemeProvider, Button } from \"@material-ui/core\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst Footer = ({ theme, settings }) => {\r\n  const footerTheme = settings.themes[settings.footer.theme] || theme;\r\n  return (\r\n    <MuiThemeProvider theme={footerTheme}>\r\n      <Helmet>\r\n        <style>\r\n          {`\r\n              .footer {\r\n                background: ${footerTheme.palette.primary.main};\r\n                color: ${footerTheme.palette.primary.contrastText};\r\n              }\r\n            `}\r\n        </style>\r\n      </Helmet>\r\n      <div className=\"footer flex flex-middle\">\r\n        <div className=\"flex flex-middle container px-sm-30 w-100\">\r\n          <a href=\"#\">\r\n            <Button variant=\"contained\" color=\"secondary\">\r\n              Hotline: 0349655473\r\n            </Button>\r\n          </a>\r\n          <span className=\"m-auto\"></span>\r\n          {/* <p className=\"m-0\">\r\n              Developed by <a href=\"http://globits.net\">Globits</a>\r\n          </p> */}\r\n        </div>\r\n      </div>\r\n    </MuiThemeProvider>\r\n  );\r\n};\r\n\r\nFooter.propTypes = {\r\n  settings: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  settings: state.layout.settings\r\n});\r\n\r\nexport default withStyles({}, { withTheme: true })(\r\n  connect(\r\n    mapStateToProps,\r\n    {}\r\n  )(Footer)\r\n);\r\n","import { Badge, withStyles } from \"@material-ui/core\";\r\n\r\nconst BadgeSelected = withStyles(theme => ({\r\n  badge: {\r\n    top: \"100%\",\r\n    right: \"90%\",\r\n    height: \"32px\",\r\n    width: \"32px\",\r\n    borderRadius: \"50%\"\r\n  }\r\n}))(Badge);\r\n\r\nexport default BadgeSelected;\r\n","\r\nexport const mainThemes = ['purple1', 'purple2', 'blue', 'purpleDark1', 'purpleDark2', 'blueDark'];\r\n\r\nexport const mainSidebarThemes = ['white', 'slateDark1', 'slateDark2', 'purpleDark1', 'purpleDark2', 'blueDark'];\r\n\r\nexport const topbarThemes = ['white', 'slateDark1', 'slateDark2', 'purpleDark1', 'purpleDark2', 'blueDark'];","import React, { Fragment } from \"react\";\r\nimport {\r\n  Tooltip,\r\n  Radio,\r\n  RadioGroup,\r\n  FormGroup,\r\n  Icon,\r\n  Switch,\r\n  Slider,\r\n  FormControlLabel,\r\n  FormControl,\r\n  FormLabel,\r\n  Paper\r\n} from \"@material-ui/core\";\r\nimport { get } from \"lodash\";\r\nimport { themeColors } from \"../../EgretTheme/themeColors\";\r\nimport BadgeSelected from \"./BadgeSelected\";\r\nimport { mainSidebarThemes, topbarThemes } from \"./customizerOptions\";\r\n\r\nconst sidebarBG = [\r\n  \"/assets/images/sidebar/sidebar-bg-dark.jpg\",\r\n  \"/assets/images/sidebar/sidebar-bg-light.jpg\"\r\n];\r\n\r\nconst Layout1Customizer = ({ settings, handleChange, handleControlChange }) => {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"mb-16 mx-12\">\r\n        <div className=\"text-muted mb-4\">Sidebar theme</div>\r\n        <div className=\"colors\">\r\n          {mainSidebarThemes\r\n            // .filter(c => themeColors[c].palette.type === \"dark\")\r\n            .map((color, i) => (\r\n              <Tooltip key={i} title={color} placement=\"top\">\r\n                <div\r\n                  className=\"color\"\r\n                  onClick={() =>\r\n                    handleChange(\"layout1Settings.leftSidebar.theme\", color)\r\n                  }\r\n                  style={{\r\n                    backgroundColor: themeColors[color].palette.primary.main\r\n                  }}\r\n                >\r\n                  {settings.layout1Settings.leftSidebar.theme === color && (\r\n                    <Icon>done</Icon>\r\n                  )}\r\n                  <div className={settings.themes[color].palette.type}></div>\r\n                </div>\r\n              </Tooltip>\r\n            ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mb-32 mx-12\">\r\n        <div className=\"text-muted mb-4\">Topbar theme</div>\r\n        <div className=\"colors\">\r\n          {topbarThemes\r\n            .map((color, i) => (\r\n              <Tooltip key={i} title={color} placement=\"top\">\r\n                <div\r\n                  className=\"color\"\r\n                  onClick={() =>\r\n                    handleChange(\"layout1Settings.topbar.theme\", color)\r\n                  }\r\n                  style={{\r\n                    backgroundColor: themeColors[color].palette.primary.main\r\n                  }}\r\n                >\r\n                  {settings.layout1Settings.topbar.theme === color && (\r\n                    <Icon>done</Icon>\r\n                  )}\r\n                  <div className={settings.themes[color].palette.type}></div>\r\n                </div>\r\n              </Tooltip>\r\n            ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mx-12 mb-24\">\r\n        <FormControl component=\"fieldset\">\r\n          <FormLabel component=\"legend\">Sidebar mode</FormLabel>\r\n          <RadioGroup\r\n            aria-label=\"Sidebar\"\r\n            name=\"leftSidebar\"\r\n            value={settings.layout1Settings.leftSidebar.mode}\r\n            onChange={handleControlChange(\"layout1Settings.leftSidebar.mode\")}\r\n          >\r\n            <FormControlLabel value=\"full\" control={<Radio />} label=\"Full\" />\r\n            <FormControlLabel value=\"close\" control={<Radio />} label=\"Close\" />\r\n            <FormControlLabel\r\n              value=\"compact\"\r\n              control={<Radio />}\r\n              label=\"Compact\"\r\n            />\r\n          </RadioGroup>\r\n        </FormControl>\r\n      </div>\r\n\r\n      <div className=\"mb-32 mx-12\">\r\n        <div className=\"text-muted\">Sidebar background image</div>\r\n\r\n        <div className=\"layout-boxes\">\r\n          {sidebarBG.map((bg, i) => (\r\n            <BadgeSelected\r\n              key={i}\r\n              color=\"primary\"\r\n              className=\"layout-box\"\r\n              style={{ width: \"calc(25% - 8px)\" }}\r\n              badgeContent={<Icon>done</Icon>}\r\n              invisible={settings.layout1Settings.leftSidebar.bgImgURL !== bg}\r\n            >\r\n              <Paper\r\n                onClick={() =>\r\n                  handleChange(\"layout1Settings.leftSidebar.bgImgURL\", bg)\r\n                }\r\n                style={{ height: \"160px\" }}\r\n              >\r\n                <img src={bg} alt=\"\" />\r\n              </Paper>\r\n            </BadgeSelected>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mb-32 mx-12\">\r\n        <div className=\"text-muted\">Sidebar background opacity</div>\r\n        <Slider\r\n          value={settings.layout1Settings.leftSidebar.bgOpacity}\r\n          onChange={(event, value) =>\r\n            handleChange(\"layout1Settings.leftSidebar.bgOpacity\", value)\r\n          }\r\n          marks={true}\r\n          step={0.02}\r\n          max={1}\r\n          min={0.5}\r\n          valueLabelDisplay=\"auto\"\r\n          aria-labelledby=\"sidebar-bgOpacity\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"mx-12 mb-24\">\r\n        <FormControl component=\"fieldset\">\r\n          <FormLabel component=\"legend\">Topbar</FormLabel>\r\n          <FormGroup>\r\n            <FormControlLabel\r\n              control={\r\n                <Switch\r\n                  checked={get(settings.layout1Settings.topbar, \"show\")}\r\n                  onChange={handleControlChange(\"layout1Settings.topbar.show\")}\r\n                />\r\n              }\r\n              label=\"Show\"\r\n            />\r\n\r\n            <FormControlLabel\r\n              control={\r\n                <Switch\r\n                  checked={get(settings.layout1Settings.topbar, \"fixed\")}\r\n                  onChange={handleControlChange(\"layout1Settings.topbar.fixed\")}\r\n                />\r\n              }\r\n              label=\"Fixed\"\r\n            />\r\n          </FormGroup>\r\n        </FormControl>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Layout1Customizer;\r\n","import React, { Fragment } from \"react\";\r\nimport {\r\n  Tooltip,\r\n  Radio,\r\n  RadioGroup,\r\n  Icon,\r\n  FormControlLabel,\r\n  FormControl,\r\n  FormLabel\r\n} from \"@material-ui/core\";\r\nimport { themeColors } from \"../../EgretTheme/themeColors\";\r\n\r\nconst Layout2Customizer = ({ settings, handleChange, handleControlChange }) => {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"mb-16 mx-12\">\r\n        <div className=\"text-muted mb-4\">Topbar theme</div>\r\n        <div className=\"colors\">\r\n          {Object.keys(themeColors).map((color, i) => (\r\n            <Tooltip key={i} title={color} placement=\"top\">\r\n              <div\r\n                className=\"color\"\r\n                onClick={() =>\r\n                  handleChange(\"layout2Settings.topbar.theme\", color)\r\n                }\r\n                style={{\r\n                  backgroundColor: themeColors[color].palette.primary.main\r\n                }}\r\n              >\r\n                {settings.layout2Settings.topbar.theme === color && (\r\n                  <Icon>done</Icon>\r\n                )}\r\n                <div className={settings.themes[color].palette.type}></div>\r\n              </div>\r\n            </Tooltip>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mb-16 mx-12\">\r\n        <div className=\"text-muted mb-4\">Navbar theme</div>\r\n        <div className=\"colors\">\r\n          {Object.keys(themeColors).map((color, i) => (\r\n            <Tooltip key={i} title={color} placement=\"top\">\r\n              <div\r\n                className=\"color\"\r\n                onClick={() =>\r\n                  handleChange(\"layout2Settings.navbar.theme\", color)\r\n                }\r\n                style={{\r\n                  backgroundColor: themeColors[color].palette.primary.main\r\n                }}\r\n              >\r\n                {settings.layout2Settings.navbar.theme === color && (\r\n                  <Icon>done</Icon>\r\n                )}\r\n                <div className={settings.themes[color].palette.type}></div>\r\n              </div>\r\n            </Tooltip>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mx-12 mb-24\">\r\n        <FormControl component=\"fieldset\">\r\n          <FormLabel component=\"legend\">Layout mode</FormLabel>\r\n          <RadioGroup\r\n            aria-label=\"layout-mode\"\r\n            name=\"layoutMode\"\r\n            value={settings.layout2Settings.mode}\r\n            onChange={handleControlChange(\"layout2Settings.mode\")}\r\n          >\r\n            <FormControlLabel value=\"full\" control={<Radio />} label=\"Full\" />\r\n            <FormControlLabel\r\n              value=\"contained\"\r\n              control={<Radio />}\r\n              label=\"Contained\"\r\n            />\r\n            <FormControlLabel value=\"boxed\" control={<Radio />} label=\"Boxed\" />\r\n          </RadioGroup>\r\n        </FormControl>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Layout2Customizer;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setLayoutSettings,\r\n  setDefaultSettings\r\n} from \"app/redux/actions/LayoutActions\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport {\r\n  Icon,\r\n  IconButton,\r\n  FormGroup,\r\n  Tooltip,\r\n  Switch,\r\n  FormControlLabel,\r\n  FormControl,\r\n  FormLabel,\r\n  Paper,\r\n  withStyles,\r\n  MuiThemeProvider\r\n} from \"@material-ui/core\";\r\nimport Scrollbar from \"react-perfect-scrollbar\";\r\nimport { merge, get, set } from \"lodash\";\r\nimport Layout1Customizer from \"./Layout1Customizer\";\r\nimport Layout2Customizer from \"./Layout2Customizer\";\r\nimport { themeColors } from \"../../EgretTheme/themeColors\";\r\nimport BadgeSelected from \"./BadgeSelected\";\r\nimport { mainThemes, topbarThemes } from \"./customizerOptions\";\r\nimport ConstantList from \"../../../appConfig\";\r\nconst styles = theme => ({\r\n  root: {\r\n    \r\n  },\r\n  paper: {\r\n    display: \"inherit\"\r\n  }\r\n});\r\n\r\nclass EgretCustomizer extends Component {\r\n  state = {\r\n    open: false\r\n  };\r\n\r\n  updateSettings = newSettings => {\r\n    let { settings, setLayoutSettings, setDefaultSettings } = this.props;\r\n    let updatedSettings = merge({}, settings, newSettings);\r\n    setLayoutSettings(updatedSettings);\r\n    setDefaultSettings(updatedSettings);\r\n  };\r\n\r\n  selectLayout = activeLayout => {\r\n    this.updateSettings({ activeLayout });\r\n  };\r\n\r\n  handleChange = (name, value) => {\r\n    let { settings } = this.props;\r\n    let updatedSettings = set(settings, name, value);\r\n\r\n    this.updateSettings(updatedSettings);\r\n  };\r\n\r\n  handleControlChange = name => event => {\r\n    let controlValue =\r\n      event.target.type === \"checkbox\"\r\n        ? event.target.checked\r\n        : event.target.value;\r\n    this.handleChange(name, controlValue);\r\n  };\r\n\r\n  tooglePanel = () => {\r\n    this.setState({ open: !this.state.open });\r\n  };\r\n\r\n  render() {\r\n    let { settings, classes } = this.props;\r\n    let activeTheme = { ...settings.themes[settings.activeTheme] };\r\n    // console.log(activeTheme);\r\n\r\n    return (\r\n      <Fragment>\r\n        <Tooltip title=\"Theme Settings\" placement=\"left\">\r\n          <IconButton\r\n            size=\"small\"\r\n            aria-label=\"delete\"\r\n            className=\"my-12\"\r\n            onClick={this.tooglePanel}\r\n          >\r\n            <Icon className=\"spin\">settings</Icon>\r\n          </IconButton>\r\n        </Tooltip>\r\n\r\n        {this.state.open && (\r\n          <MuiThemeProvider theme={activeTheme}>\r\n            <div\r\n              className={`egret-customizer pb-8 ${classes.root}`}\r\n              style={{\r\n                backgroundColor: activeTheme.palette.background.default\r\n              }}\r\n            >\r\n              <div className=\"flex felx-row flex-middle p-16 mb-16 elevation-z6\" style={{minHeight: \"64px\"}}>\r\n                <Icon color=\"primary\">settings</Icon>\r\n                <h5 className=\"mb-0 ml-8\">Theme Settings</h5>\r\n                <IconButton\r\n                  onClick={this.tooglePanel}\r\n                  className=\"customizer-close\"\r\n                >\r\n                  <Icon>close</Icon>\r\n                </IconButton>\r\n              </div>\r\n              <Scrollbar options={{ suppressScrollX: true }} className=\"px-16\">\r\n                <div className=\"mt-8 mb-32 mx-12\">\r\n                  <div className=\"text-muted\">Layouts</div>\r\n\r\n                  <div className=\"layout-boxes\">\r\n                    <BadgeSelected\r\n                      color=\"secondary\"\r\n                      className=\"layout-box\"\r\n                      badgeContent={<Icon>done</Icon>}\r\n                      invisible={settings.activeLayout !== \"layout1\"}\r\n                    >\r\n                      <Paper onClick={() => this.selectLayout(\"layout1\")} elevation={4}>\r\n                        <img\r\n                          src= {ConstantList.ROOT_PATH+\"assets/images/screenshots/layout1-customizer.png\"}\r\n                          alt=\"\"\r\n                        />\r\n                      </Paper>\r\n                    </BadgeSelected>\r\n                    <BadgeSelected\r\n                      color=\"secondary\"\r\n                      className=\"layout-box\"\r\n                      badgeContent={<Icon>done</Icon>}\r\n                      invisible={settings.activeLayout !== \"layout2\"}\r\n                    >\r\n                      <Paper onClick={() => this.selectLayout(\"layout2\")} elevation={4}>\r\n                        <img\r\n                          src= {ConstantList.ROOT_PATH+\"assets/images/screenshots/layout2-customizer.png\"}\r\n                          alt=\"\"\r\n                        />\r\n                      </Paper>\r\n                    </BadgeSelected>\r\n                  </div>\r\n                </div>\r\n                {/* END LAYOUT */}\r\n\r\n                <div className=\"mb-16 mx-12\">\r\n                  <div className=\"text-muted mb-4\">Main theme</div>\r\n                  <div className=\"colors\">\r\n                    {mainThemes.map((color, i) => (\r\n                      <Tooltip key={i} title={color} placement=\"top\">\r\n                        <div\r\n                          className=\"color\"\r\n                          onClick={() =>\r\n                            this.updateSettings({ activeTheme: color })\r\n                          }\r\n                          style={{\r\n                            backgroundColor:\r\n                              themeColors[color].palette.primary.main\r\n                          }}\r\n                        >\r\n                          {settings.activeTheme === color && <Icon>done</Icon>}\r\n                          <div\r\n                            className={settings.themes[color].palette.type}\r\n                          ></div>\r\n                        </div>\r\n                      </Tooltip>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n\r\n                {settings.activeLayout === \"layout1\" && (\r\n                  <Layout1Customizer\r\n                    settings={settings}\r\n                    handleChange={this.handleChange}\r\n                    handleControlChange={this.handleControlChange}\r\n                  />\r\n                )}\r\n\r\n                {settings.activeLayout === \"layout2\" && (\r\n                  <Layout2Customizer\r\n                    settings={settings}\r\n                    handleChange={this.handleChange}\r\n                    handleControlChange={this.handleControlChange}\r\n                  />\r\n                )}\r\n\r\n                <div className=\"mx-12 mb-24\">\r\n                  <FormControl component=\"fieldset\">\r\n                    <FormLabel component=\"legend\">Footer</FormLabel>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Switch\r\n                            checked={get(settings.footer, \"show\")}\r\n                            onChange={this.handleControlChange(\"footer.show\")}\r\n                          />\r\n                        }\r\n                        label=\"Show\"\r\n                      />\r\n\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Switch\r\n                            checked={get(\r\n                              settings.layout1Settings.footer,\r\n                              \"fixed\"\r\n                            )}\r\n                            onChange={this.handleControlChange(\"footer.fixed\")}\r\n                          />\r\n                        }\r\n                        label=\"Fixed\"\r\n                      />\r\n                    </FormGroup>\r\n                  </FormControl>\r\n                </div>\r\n\r\n                <div className=\"mx-12 mb-24\">\r\n                  <FormControl component=\"fieldset\">\r\n                    <FormLabel component=\"legend\">Secondary sidebar</FormLabel>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Switch\r\n                            checked={get(settings.secondarySidebar, \"show\")}\r\n                            onChange={this.handleControlChange(\r\n                              \"secondarySidebar.show\"\r\n                            )}\r\n                          />\r\n                        }\r\n                        label=\"Show\"\r\n                      />\r\n                    </FormGroup>\r\n                  </FormControl>\r\n                </div>\r\n\r\n                <div className=\"mb-16 mx-12\">\r\n                  <div className=\"text-muted mb-4\">Secondary sidebar theme</div>\r\n                  <div className=\"colors\">\r\n                    {topbarThemes\r\n                    .map((color, i) => (\r\n                      <Tooltip key={i} title={color} placement=\"top\">\r\n                        <div\r\n                          className=\"color\"\r\n                          onClick={() =>\r\n                            this.handleChange(\"secondarySidebar.theme\", color)\r\n                          }\r\n                          style={{\r\n                            backgroundColor:\r\n                              themeColors[color].palette.primary.main\r\n                          }}\r\n                        >\r\n                          {settings.secondarySidebar.theme === color && (\r\n                            <Icon>done</Icon>\r\n                          )}\r\n                          <div\r\n                            className={settings.themes[color].palette.type}\r\n                          ></div>\r\n                        </div>\r\n                      </Tooltip>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"mb-16 mx-12\">\r\n                  <div className=\"text-muted mb-4\">Footer theme</div>\r\n                  <div className=\"colors\">\r\n                    {topbarThemes\r\n                    .map((color, i) => (\r\n                      <Tooltip key={i} title={color} placement=\"top\">\r\n                        <div\r\n                          className=\"color\"\r\n                          onClick={() =>\r\n                            this.handleChange(\"footer.theme\", color)\r\n                          }\r\n                          style={{\r\n                            backgroundColor:\r\n                              themeColors[color].palette.primary.main\r\n                          }}\r\n                        >\r\n                          {settings.footer.theme === color && <Icon>done</Icon>}\r\n                          <div\r\n                            className={settings.themes[color].palette.type}\r\n                          ></div>\r\n                        </div>\r\n                      </Tooltip>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </Scrollbar>\r\n            </div>\r\n          </MuiThemeProvider>\r\n        )}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  settings: state.layout.settings,\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  setDefaultSettings: PropTypes.func.isRequired\r\n});\r\n\r\nexport default withStyles(styles, { withTheme: true })(\r\n  connect(\r\n    mapStateToProps,\r\n    { setLayoutSettings, setDefaultSettings }\r\n  )(EgretCustomizer)\r\n);\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  MuiThemeProvider,\r\n  Badge,\r\n  Fab,\r\n  IconButton,\r\n  Icon\r\n} from \"@material-ui/core\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { classList, isMobile, debounce } from \"utils\";\r\nimport EgretCustomizer from \"./EgretCustomizer/EgretCustomizer\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport ShoppingCart from \"./ShoppingCart\";\r\n\r\nconst width = \"50px\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    position: \"fixed\",\r\n    height: \"100vh\",\r\n    width,\r\n    right: `-${width}`,\r\n    bottom: 0,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    boxShadow: theme.shadows[8],\r\n    zIndex: 98,\r\n    transition: \"all 0.15s ease\",\r\n    \"&.open\": {\r\n      right: 0,\r\n      \"& .toggle\": {\r\n        left: 0\r\n      }\r\n    },\r\n    \"& .toggle\": {\r\n      position: \"relative\",\r\n      left: \"-28px\",\r\n      bottom: \"20px\",\r\n      transition: \"all 0.15s ease\"\r\n    }\r\n  }\r\n});\r\n\r\nclass SecondarySidebar extends Component {\r\n  state = {\r\n    open: true\r\n  };\r\n  listenWindowResizeRef;\r\n\r\n  toggle = () => {\r\n    this.setState({ open: !this.state.open });\r\n  };\r\n\r\n  componentWillMount() {\r\n    this.setState({ open: !isMobile() });\r\n    if (window) {\r\n      this.listenWindowResizeRef = this.listenWindowResize();\r\n      // LISTEN WINDOW RESIZE\r\n      window.addEventListener(\"resize\", this.listenWindowResizeRef);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (window) {\r\n      window.removeEventListener(\"resize\", this.listenWindowResizeRef);\r\n    }\r\n  }\r\n\r\n  listenWindowResize = () => {\r\n    return debounce(() => {\r\n      this.setState({ open: !isMobile() });\r\n    }, 100);\r\n  };\r\n\r\n  render() {\r\n    let { settings, classes, theme } = this.props;\r\n    const secondarySidebarTheme =\r\n      settings.themes[settings.secondarySidebar.theme] || theme;\r\n\r\n    return (\r\n      <MuiThemeProvider theme={secondarySidebarTheme}>\r\n        {this.state.open && !isMobile() && (\r\n          <Helmet>\r\n            <style>\r\n              {`\r\n              .content-wrap, \r\n              .layout2.layout-contained, \r\n              .layout2.layout-full {\r\n                margin-right: ${width};\r\n              }\r\n              @media screen and (max-width: 959px) {\r\n                .toolbar-menu-wrap .menu-area {\r\n                  width: calc(100% - ${width});\r\n                }\r\n              }\r\n              .egret-customizer {\r\n                right: ${width};\r\n              }\r\n            `}\r\n            </style>\r\n          </Helmet>\r\n        )}\r\n\r\n        <div\r\n          className={\r\n            classes.root +\r\n            \" \" +\r\n            classList({\r\n              open: this.state.open,\r\n              \"secondary-sidebar\": true\r\n            })\r\n          }\r\n          style={{\r\n            backgroundColor: secondarySidebarTheme.palette.primary.main\r\n          }}\r\n        >\r\n          <span className=\"m-auto\"></span>\r\n\r\n          <EgretCustomizer />\r\n\r\n          <ShoppingCart/>\r\n\r\n          <IconButton size=\"small\" aria-label=\"delete\" className=\"my-12\">\r\n            <Icon>comments</Icon>\r\n          </IconButton>\r\n\r\n          {/* Toggle Button */}\r\n          <span className=\"m-auto\"></span>\r\n          <div className=\"toggle\">\r\n            {this.state.open && (\r\n              <IconButton\r\n                onClick={this.toggle}\r\n                size=\"small\"\r\n                aria-label=\"toggle\"\r\n              >\r\n                <Icon>arrow_right</Icon>\r\n              </IconButton>\r\n            )}\r\n            {!this.state.open && (\r\n              <Fab\r\n                variant=\"extended\"\r\n                size=\"small\"\r\n                color=\"primary\"\r\n                aria-label=\"add\"\r\n                className=\"pr-36\"\r\n                onClick={this.toggle}\r\n              >\r\n                <Icon>arrow_left</Icon>\r\n              </Fab>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  settings: state.layout.settings\r\n});\r\n\r\nexport default withStyles(styles, { withTheme: true })(\r\n  withRouter(\r\n    connect(\r\n      mapStateToProps,\r\n      {}\r\n    )(SecondarySidebar)\r\n  )\r\n);\r\n"],"sourceRoot":""}