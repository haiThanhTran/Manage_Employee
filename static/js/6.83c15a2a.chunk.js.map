{"version":3,"sources":["app/EgretLayout/SharedCompoents/ShoppingCart.jsx","app/EgretLayout/SharedCompoents/NotificationBar.jsx","app/EgretLayout/SharedCompoents/LanguageSelect.jsx","app/EgretLayout/SharedCompoents/Sidenav.jsx","app/navigations.js","app/EgretLayout/SharedCompoents/Brand.jsx","app/EgretLayout/EgretTheme/SidenavTheme.jsx","app/EgretLayout/SharedCompoents/Footer.jsx","app/EgretLayout/SharedCompoents/EgretCustomizer/BadgeSelected.jsx","app/EgretLayout/SharedCompoents/EgretCustomizer/customizerOptions.js","app/EgretLayout/SharedCompoents/EgretCustomizer/Layout1Customizer.jsx","app/EgretLayout/SharedCompoents/EgretCustomizer/Layout2Customizer.jsx","app/EgretLayout/SharedCompoents/EgretCustomizer/EgretCustomizer.jsx","app/EgretLayout/SharedCompoents/SecondarySidebar.jsx"],"names":["cartListLoaded","withStyles","withTheme","connect","state","settings","layout","getCartList","PropTypes","func","isRequired","deleteProductFromCart","updateCartAmount","cartList","ecommerce","user","props","container","theme","_props$cartList","_React$useState","React","useState","_React$useState2","_slicedToArray","panelOpen","setPanelOpen","userId","palette","createElement","MuiThemeProvider","themes","activeTheme","Drawer","variant","anchor","open","onClose","ModalProps","keepMounted","className","Icon","color","map","product","key","id","IconButton","size","onClick","amount","disabled","src","imgUrl","alt","title","price","fontSize","getNotification","deleteNotification","deleteAllNotification","notification","LanguageSelect","_React$Component","_getPrototypeOf2","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_possibleConstructorReturn","_getPrototypeOf","call","apply","concat","selected","hasError","_inherits","_createClass","value","_this$props","this","i18n","t","classes","changeLanguage","setState","_this2","_this$props2","_this$state","root","autoComplete","FormControl","formControl","error","InputLabel","htmlFor","Select","name","onChange","event","handleChange","target","input","Input","MenuItem","FormHelperText","Component","display","flexWrap","margin","spacing","unit","minWidth","selectEmpty","marginTop","ViewEgretVerticalNav","withTranslation","EgretVerticalNav","Sidenav","_Component","updateSidebarMode","sidebarSettings","setLayoutSettings","activeLayoutSettingsName","activeLayout","activeLayoutSettings","_objectSpread","leftSidebar","renderOverlay","mode","navigation","localStorageService","getLocalStorageItem","navigations","Fragment","Scrollbar","option","suppressScrollX","children","getNavigation","withRouter","isVisible","icon","path","ConstantList","ROOT_PATH","Brand","Link","to","HOME_PAGE","SidenavTheme","_ref","Helmet","type","text","secondary","layout1Settings","bgImgURL","primary","main","bgOpacity","footerTheme","footer","contrastText","href","Button","BadgeSelected","badge","top","right","height","width","borderRadius","Badge","mainThemes","mainSidebarThemes","topbarThemes","sidebarBG","Layout1Customizer","handleControlChange","i","Tooltip","placement","style","backgroundColor","themeColors","topbar","component","FormLabel","RadioGroup","aria-label","FormControlLabel","control","Radio","label","bg","badgeContent","invisible","Paper","Slider","marks","step","max","min","valueLabelDisplay","aria-labelledby","FormGroup","Switch","checked","get","Layout2Customizer","Object","keys","layout2Settings","navbar","EgretCustomizer","updateSettings","newSettings","setDefaultSettings","updatedSettings","merge","selectLayout","set","controlValue","tooglePanel","background","default","minHeight","options","elevation","secondarySidebar","paper","SecondarySidebar","toggle","listenWindowResize","debounce","isMobile","window","listenWindowResizeRef","addEventListener","removeEventListener","secondarySidebarTheme","classList","ShoppingCart","Fab","position","bottom","flexDirection","alignItems","justifyContent","boxShadow","shadows","zIndex","transition","left"],"mappings":"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","file":"static/js/6.83c15a2a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Icon,\r\n  Badge,\r\n  MuiThemeProvider,\r\n  IconButton,\r\n  Drawer\r\n} from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getCartList,\r\n  deleteProductFromCart,\r\n  updateCartAmount\r\n} from \"app/redux/actions/EcommerceActions\";\r\n\r\nlet cartListLoaded = false;\r\n\r\nfunction ShoppingCart(props) {\r\n  const {\r\n    container,\r\n    theme,\r\n    settings,\r\n    cartList = [],\r\n    getCartList,\r\n    deleteProductFromCart,\r\n    updateCartAmount,\r\n    user\r\n  } = props;\r\n\r\n  const [panelOpen, setPanelOpen] = React.useState(false);\r\n\r\n  if (!cartListLoaded) {\r\n    getCartList(user.userId);\r\n    cartListLoaded = true;\r\n  }\r\n\r\n  function handleDrawerToggle() {\r\n    setPanelOpen(!panelOpen);\r\n  }\r\n\r\n  const parentThemePalette = theme.palette;\r\n\r\n  return (\r\n    <MuiThemeProvider theme={settings.themes[settings.activeTheme]}>\r\n      {/* <IconButton\r\n        onClick={handleDrawerToggle}\r\n        style={{\r\n          color:\r\n            parentThemePalette.type === \"light\"\r\n              ? parentThemePalette.text.secondary\r\n              : parentThemePalette.text.primary\r\n        }}\r\n      >\r\n        <Badge color=\"secondary\" badgeContent={cartList.length}>\r\n          <Icon>shopping_cart</Icon>\r\n        </Badge>\r\n      </IconButton> */}\r\n\r\n      <Drawer\r\n        container={container}\r\n        variant=\"temporary\"\r\n        anchor={\"right\"}\r\n        open={panelOpen}\r\n        onClose={handleDrawerToggle}\r\n        ModalProps={{\r\n          keepMounted: true\r\n        }}\r\n      >\r\n        <div className=\"mini-cart\">\r\n          <div className=\"cart__topbar flex flex-middle p-16 mb-24\">\r\n            <Icon color=\"primary\">shopping_cart</Icon>\r\n            <h5 className=\"ml-8 my-0 font-weight-500\">Cart</h5>\r\n          </div>\r\n\r\n          {cartList.map(product => (\r\n            <div\r\n              key={product.id}\r\n              className=\"mini-cart__item flex flex-middle flex-space-between py-16 px-8\"\r\n            >\r\n              <div className=\"flex flex-column mr-8\">\r\n                <IconButton\r\n                  size=\"small\"\r\n                  onClick={() =>\r\n                    updateCartAmount(\r\n                      user.userId,\r\n                      product.id,\r\n                      product.amount + 1\r\n                    )\r\n                  }\r\n                >\r\n                  <Icon className=\"cursor-pointer\">keyboard_arrow_up</Icon>\r\n                </IconButton>\r\n                <IconButton\r\n                  disabled={!(product.amount - 1)}\r\n                  size=\"small\"\r\n                  onClick={() =>\r\n                    updateCartAmount(\r\n                      user.userId,\r\n                      product.id,\r\n                      product.amount - 1\r\n                    )\r\n                  }\r\n                >\r\n                  <Icon className=\"cursor-pointer\">keyboard_arrow_down</Icon>\r\n                </IconButton>\r\n              </div>\r\n              <div className=\"mr-8\">\r\n                <img src={product.imgUrl} alt={product.title} />\r\n              </div>\r\n              <div className=\"mr-8 text-center\">\r\n                <h6 className=\"m-0 mb-4\">{product.title}</h6>\r\n                <small className=\"text-muted\">\r\n                  ${product.price} x {product.amount}\r\n                </small>\r\n              </div>\r\n              <IconButton\r\n                size=\"small\"\r\n                onClick={() => deleteProductFromCart(user.userId, product.id)}\r\n              >\r\n                <Icon fontSize=\"small\">clear</Icon>\r\n              </IconButton>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </Drawer>\r\n    </MuiThemeProvider>\r\n  );\r\n}\r\n\r\nShoppingCart.propTypes = {\r\n  settings: PropTypes.object.isRequired,\r\n  cartList: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  settings: state.layout.settings,\r\n  getCartList: PropTypes.func.isRequired,\r\n  deleteProductFromCart: PropTypes.func.isRequired,\r\n  updateCartAmount: PropTypes.func.isRequired,\r\n  cartList: state.ecommerce.cartList,\r\n  user: state.user\r\n});\r\n\r\nexport default withStyles({}, { withTheme: true })(\r\n  connect(\r\n    mapStateToProps,\r\n    { getCartList, deleteProductFromCart, updateCartAmount }\r\n  )(ShoppingCart)\r\n);\r\n","import React from \"react\";\r\nimport {\r\n  Icon,\r\n  Badge,\r\n  MuiThemeProvider,\r\n  Card,\r\n  Button,\r\n  IconButton,\r\n  Drawer,\r\n  Fab\r\n} from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport { getTimeDifference } from \"utils.js\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getNotification,\r\n  deleteAllNotification,\r\n  deleteNotification\r\n} from \"../../redux/actions/NotificationActions\";\r\n\r\nfunction NotificationBar(props) {\r\n  const {\r\n    container,\r\n    theme,\r\n    settings,\r\n    notification: notifcationList = [],\r\n    getNotification,\r\n    deleteAllNotification,\r\n    deleteNotification\r\n  } = props;\r\n\r\n  const [panelOpen, setPanelOpen] = React.useState(false);\r\n\r\n  function handleDrawerToggle() {\r\n    if (!panelOpen) {\r\n      getNotification();\r\n    }\r\n    setPanelOpen(!panelOpen);\r\n  }\r\n  const parentThemePalette = theme.palette;\r\n  // console.log(theme);\r\n\r\n  return (\r\n    <MuiThemeProvider theme={settings.themes[settings.activeTheme]}>\r\n      {/* <IconButton\r\n        onClick={handleDrawerToggle}\r\n        style={{\r\n          color:\r\n            parentThemePalette.type === \"light\"\r\n              ? parentThemePalette.text.secondary\r\n              : parentThemePalette.text.primary\r\n        }}\r\n      >\r\n        <Badge color=\"secondary\" badgeContent={5}>\r\n          <Icon>notifications</Icon>\r\n        </Badge>\r\n      </IconButton> */}\r\n\r\n      {/* <Drawer\r\n        width={\"100px\"}\r\n        container={container}\r\n        variant=\"temporary\"\r\n        anchor={\"right\"}\r\n        open={panelOpen}\r\n        onClose={handleDrawerToggle}\r\n        ModalProps={{\r\n          keepMounted: true\r\n        }}\r\n      >\r\n        <div className=\"notification\">\r\n          <div className=\"notification__topbar flex flex-middle p-16 mb-24\">\r\n            <Icon color=\"primary\">notifications</Icon>\r\n            <h5 className=\"ml-8 my-0 font-weight-500\">Notifications</h5>\r\n          </div>\r\n\r\n          {notifcationList.map(notification => (\r\n            <div\r\n              key={notification.id}\r\n              className=\"notification__card position-relative\"\r\n            >\r\n              <IconButton\r\n                size=\"small\"\r\n                className=\"delete-button bg-light-gray mr-24\"\r\n                onClick={() => deleteNotification(notification.id)}\r\n              >\r\n                <Icon className=\"text-muted\" fontSize=\"small\">\r\n                  clear\r\n                </Icon>\r\n              </IconButton>\r\n              <Link to={`/${notification.path}`} onClick={handleDrawerToggle}>\r\n                <Card className=\"mx-16 mb-24\" elevation={3}>\r\n                  <div className=\"card__topbar flex flex-middle flex-space-between p-8 bg-light-gray\">\r\n                    <div className=\"flex\">\r\n                      <div className=\"card__topbar__button\">\r\n                        <Icon\r\n                          className=\"card__topbar__icon\"\r\n                          fontSize=\"small\"\r\n                          color={notification.icon.color}\r\n                        >\r\n                          {notification.icon.name}\r\n                        </Icon>\r\n                      </div>\r\n                      <span className=\"ml-4 font-weight-500 text-muted\">\r\n                        {notification.heading}\r\n                      </span>\r\n                    </div>\r\n                    <small className=\"card__topbar__time text-muted\">\r\n                      {getTimeDifference(new Date(notification.timestamp))} ago\r\n                    </small>\r\n                  </div>\r\n                  <div className=\"px-16 pt-8 pb-16\">\r\n                    <p className=\"m-0\">{notification.title}</p>\r\n                    <small className=\"text-muted\">\r\n                      {notification.subtitle}\r\n                    </small>\r\n                  </div>\r\n                </Card>\r\n              </Link>\r\n            </div>\r\n          ))}\r\n\r\n          <div className=\"text-center\">\r\n            <Button onClick={deleteAllNotification}>Clear Notifications</Button>\r\n          </div>\r\n        </div>\r\n      </Drawer> */}\r\n    </MuiThemeProvider>\r\n  );\r\n}\r\n\r\nNotificationBar.propTypes = {\r\n  settings: PropTypes.object.isRequired,\r\n  notification: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  getNotification: PropTypes.func.isRequired,\r\n  deleteNotification: PropTypes.func.isRequired,\r\n  deleteAllNotification: PropTypes.func.isRequired,\r\n  notification: state.notification,\r\n  settings: state.layout.settings\r\n});\r\n\r\nexport default withStyles({}, { withTheme: true })(\r\n  connect(\r\n    mapStateToProps,\r\n    { getNotification, deleteNotification, deleteAllNotification }\r\n  )(NotificationBar)\r\n);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing.unit,\r\n    minWidth: 120\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing.unit * 2\r\n  }\r\n});\r\n\r\nclass LanguageSelect extends React.Component {\r\n\r\n\r\n  state = {\r\n    selected: 'vi',\r\n    hasError: false\r\n  };\r\n\r\n  handleChange(value) {\r\n    //alert(t('description.part1'));\r\n    const { t, i18n,classes } = this.props;\r\n    i18n.changeLanguage(value);\r\n    this.setState({ selected: value });\r\n  }\r\n  render() {\r\n    const { t, i18n,classes } = this.props;\r\n    const { selected, hasError } = this.state;\r\n    let language= 'vi';\r\n    const changeLanguage = lng => {\r\n      i18n.changeLanguage(lng);\r\n    };  \r\n    return (\r\n      <form className={classes.root} autoComplete=\"off\">\r\n        <FormControl className={classes.formControl} error={hasError}>\r\n          <InputLabel htmlFor=\"name\">{t('general.language')}</InputLabel>\r\n          <Select\r\n            name=\"name\"\r\n            value={selected}\r\n            onChange={event => this.handleChange(event.target.value)}\r\n            input={<Input id=\"name\" />}\r\n          >\r\n            <MenuItem value=\"vi\">Tiếng Việt</MenuItem>\r\n            {/* <MenuItem value=\"de\">Deutsch</MenuItem> */}\r\n            {/* <MenuItem value=\"en\">English</MenuItem> */}\r\n          </Select>\r\n          {hasError && <FormHelperText>This is required!</FormHelperText>}\r\n        </FormControl>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nLanguageSelect.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(LanguageSelect);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport Scrollbar from \"react-perfect-scrollbar\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { navigations } from \"../../navigations\";\r\nimport { EgretVerticalNav } from \"egret\";\r\nimport { setLayoutSettings } from \"app/redux/actions/LayoutActions\";\r\nimport ConstantList from \"../../appConfig\";\r\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\r\nimport JwtAuthService from \"../../services/jwtAuthService\";\r\nimport localStorageService from \"../../services/localStorageService\";\r\nconst ViewEgretVerticalNav = withTranslation()(EgretVerticalNav);\r\nclass Sidenav extends Component {\r\n  state = {};\r\n  updateSidebarMode = sidebarSettings => {\r\n    let { settings, setLayoutSettings } = this.props;\r\n    let activeLayoutSettingsName = settings.activeLayout+\"Settings\";\r\n    let activeLayoutSettings = settings[activeLayoutSettingsName];\r\n\r\n    setLayoutSettings({\r\n      ...settings,\r\n      [activeLayoutSettingsName]: {\r\n        ...activeLayoutSettings,\r\n        leftSidebar: {\r\n          ...activeLayoutSettings.leftSidebar,\r\n          ...sidebarSettings\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  renderOverlay = () => (\r\n    <div\r\n      onClick={() => this.updateSidebarMode({ mode: \"close\" })}\r\n      className=\"sidenav__overlay\"\r\n    />\r\n  );\r\n  getNavigation(){\r\n    //let navigation=localStorageService.getSessionItem(\"navigations\");\r\n    let navigation=localStorageService.getLocalStorageItem(\"navigations\");\r\n    if(navigation && navigation.length>0){\r\n      return navigation;\r\n    }else {\r\n      return navigations;\r\n    }\r\n    \r\n  }\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Scrollbar option={{suppressScrollX: true}} className=\"scrollable position-relative\">\r\n          {this.props.children}\r\n          <ViewEgretVerticalNav navigation={this.getNavigation()} />\r\n        </Scrollbar>\r\n        {this.renderOverlay()}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\nSidenav.propTypes = {\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  settings: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  settings: state.layout.settings\r\n});\r\nexport default withRouter(\r\n  connect(\r\n    mapStateToProps,\r\n    {\r\n      setLayoutSettings\r\n    }\r\n  )(Sidenav)\r\n);","import ConstantList from \"./appConfig\";\r\nexport const navigations = [\r\n\r\n  \r\n  {\r\n    name: \"Dashboard.manage\",\r\n    isVisible: true,\r\n    icon: \"engineering\",\r\n    children: [\r\n      // {\r\n      //   name: \"Dashboard.eQAActivityLog\",\r\n      //   isVisible:true,\r\n      //   path: ConstantList.ROOT_PATH + \"user_manager/activity_log\",\r\n      //   icon: \"keyboard_arrow_right\"\r\n      // },\r\n      {\r\n        name: \"Thêm Nhân Viên\",\r\n        isVisible: true,\r\n        path: ConstantList.ROOT_PATH + \"manage_employee\",\r\n        icon: \"keyboard_arrow_right\",\r\n      },\r\n      // {\r\n      //   name: \"Tỉnh\",\r\n      //   isVisible: true,\r\n      //   path: ConstantList.ROOT_PATH + \"province\",\r\n      //   icon: \"keyboard_arrow_right\",\r\n      // },\r\n      // {\r\n      //   name: \"Huyện\",\r\n      //   isVisible: true,\r\n      //   path: ConstantList.ROOT_PATH + \"district\",\r\n      //   icon: \"keyboard_arrow_right\",\r\n      // },\r\n      // {\r\n      //   name: \"Xã\",\r\n      //   isVisible: true,\r\n      //   path: ConstantList.ROOT_PATH + \"ward\",\r\n      //   icon: \"keyboard_arrow_right\",\r\n      // },\r\n    ],\r\n  },\r\n  {\r\n    name: \"Lãnh đạo\",\r\n    icon: \"dashboard\",\r\n    path: \"\",\r\n    isVisible: true,\r\n    children: [\r\n      {\r\n        name: \"Lãnh đạo chờ duyệt\",\r\n        path: ConstantList.ROOT_PATH + \"directory/category\",\r\n        icon: \"keyboard_arrow_right\",\r\n        isVisible: true,\r\n      },\r\n      {\r\n        name: \"Lãnh đạo đã duyệt\",\r\n        path: ConstantList.ROOT_PATH + \"directory/timesheet\",\r\n        icon: \"keyboard_arrow_right\",\r\n        isVisible: true,\r\n      },\r\n    ],\r\n  },\r\n];\r\n","import React, { Component } from \"react\";\r\nimport ConstantList from \"../../appConfig\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Helmet } from 'react-helmet';\r\nclass Brand extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div className=\"flex flex-middle flex-space-between brand-area\">\r\n        {/* <div className=\"flex flex-middle brand\">       \r\n          <Link to={ConstantList.HOME_PAGE}>\r\n             <img src= {ConstantList.ROOT_PATH+ \"assets/images/logo-paster.png\"} alt=\"company-logo\" />         \r\n          </Link>\r\n          <span className=\"brand__text\">PASTEUR EQA</span>\r\n        </div> */}\r\n        <div className=\"flex flex-middle brand logo-menu\">\r\n          <Link to={ConstantList.HOME_PAGE}>\r\n            <span className=\"brand__text\">Fashion Store</span>\r\n          </Link>\r\n        </div>\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Brand;\r\n","import React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst SidenavTheme = ({ theme, settings }) => {\r\n\r\n  function darkHoverStyle() {\r\n    return theme.palette.type === \"dark\"\r\n      ? `.navigation .nav-item:hover,\r\n        .navigation .nav-item.active {\r\n          color: ${theme.palette.text.primary};\r\n        }`\r\n      : \"\";\r\n  }\r\n\r\n  function lightHoverStyle() {\r\n    return theme.palette.type === \"light\"\r\n      ? `.navigation .nav-item:hover,\r\n        .navigation .nav-item.active,\r\n        .navigation .submenu {\r\n          background: rgba(0, 0, 0, .08);\r\n        }`\r\n      : \"\";\r\n  }\r\n\r\n  return (\r\n    <Helmet>\r\n      <style>\r\n        {`\r\n        \r\n        ${\r\n          theme.palette.type === \"dark\"\r\n            ? `.sidenav {\r\n          color: ${theme.palette.text.secondary};\r\n        }`\r\n            : \" \"\r\n        }\r\n\r\n        .sidenav__hold {\r\n          background-image: url(${\r\n            settings.layout1Settings.leftSidebar.bgImgURL\r\n          });\r\n          opacity: 1 !important;\r\n        }\r\n        .sidenav__hold::after {\r\n          background: ${theme.palette.primary.main};\r\n          opacity: ${settings.layout1Settings.leftSidebar.bgOpacity};\r\n        }\r\n\r\n        ${lightHoverStyle()}\r\n        ${darkHoverStyle()}\r\n        \r\n      `}\r\n      </style>\r\n    </Helmet>\r\n  );\r\n};\r\n\r\nexport default SidenavTheme;\r\n","import React from \"react\";\r\nimport { withStyles, MuiThemeProvider, Button } from \"@material-ui/core\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst Footer = ({ theme, settings }) => {\r\n  const footerTheme = settings.themes[settings.footer.theme] || theme;\r\n  return (\r\n    <MuiThemeProvider theme={footerTheme}>\r\n      <Helmet>\r\n        <style>\r\n          {`\r\n              .footer {\r\n                background: ${footerTheme.palette.primary.main};\r\n                color: ${footerTheme.palette.primary.contrastText};\r\n              }\r\n            `}\r\n        </style>\r\n      </Helmet>\r\n      <div className=\"footer flex flex-middle\">\r\n        <div className=\"flex flex-middle container px-sm-30 w-100\">\r\n          <a href=\"#\">\r\n            <Button variant=\"contained\" color=\"secondary\">\r\n              Hotline: 0349655473\r\n            </Button>\r\n          </a>\r\n          <span className=\"m-auto\"></span>\r\n          {/* <p className=\"m-0\">\r\n              Developed by <a href=\"http://globits.net\">Globits</a>\r\n          </p> */}\r\n        </div>\r\n      </div>\r\n    </MuiThemeProvider>\r\n  );\r\n};\r\n\r\nFooter.propTypes = {\r\n  settings: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  settings: state.layout.settings\r\n});\r\n\r\nexport default withStyles({}, { withTheme: true })(\r\n  connect(\r\n    mapStateToProps,\r\n    {}\r\n  )(Footer)\r\n);\r\n","import { Badge, withStyles } from \"@material-ui/core\";\r\n\r\nconst BadgeSelected = withStyles(theme => ({\r\n  badge: {\r\n    top: \"100%\",\r\n    right: \"90%\",\r\n    height: \"32px\",\r\n    width: \"32px\",\r\n    borderRadius: \"50%\"\r\n  }\r\n}))(Badge);\r\n\r\nexport default BadgeSelected;\r\n","\r\nexport const mainThemes = ['purple1', 'purple2', 'blue', 'purpleDark1', 'purpleDark2', 'blueDark'];\r\n\r\nexport const mainSidebarThemes = ['white', 'slateDark1', 'slateDark2', 'purpleDark1', 'purpleDark2', 'blueDark'];\r\n\r\nexport const topbarThemes = ['white', 'slateDark1', 'slateDark2', 'purpleDark1', 'purpleDark2', 'blueDark'];","import React, { Fragment } from \"react\";\r\nimport {\r\n  Tooltip,\r\n  Radio,\r\n  RadioGroup,\r\n  FormGroup,\r\n  Icon,\r\n  Switch,\r\n  Slider,\r\n  FormControlLabel,\r\n  FormControl,\r\n  FormLabel,\r\n  Paper\r\n} from \"@material-ui/core\";\r\nimport { get } from \"lodash\";\r\nimport { themeColors } from \"../../EgretTheme/themeColors\";\r\nimport BadgeSelected from \"./BadgeSelected\";\r\nimport { mainSidebarThemes, topbarThemes } from \"./customizerOptions\";\r\n\r\nconst sidebarBG = [\r\n  \"/assets/images/sidebar/sidebar-bg-dark.jpg\",\r\n  \"/assets/images/sidebar/sidebar-bg-light.jpg\"\r\n];\r\n\r\nconst Layout1Customizer = ({ settings, handleChange, handleControlChange }) => {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"mb-16 mx-12\">\r\n        <div className=\"text-muted mb-4\">Sidebar theme</div>\r\n        <div className=\"colors\">\r\n          {mainSidebarThemes\r\n            // .filter(c => themeColors[c].palette.type === \"dark\")\r\n            .map((color, i) => (\r\n              <Tooltip key={i} title={color} placement=\"top\">\r\n                <div\r\n                  className=\"color\"\r\n                  onClick={() =>\r\n                    handleChange(\"layout1Settings.leftSidebar.theme\", color)\r\n                  }\r\n                  style={{\r\n                    backgroundColor: themeColors[color].palette.primary.main\r\n                  }}\r\n                >\r\n                  {settings.layout1Settings.leftSidebar.theme === color && (\r\n                    <Icon>done</Icon>\r\n                  )}\r\n                  <div className={settings.themes[color].palette.type}></div>\r\n                </div>\r\n              </Tooltip>\r\n            ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mb-32 mx-12\">\r\n        <div className=\"text-muted mb-4\">Topbar theme</div>\r\n        <div className=\"colors\">\r\n          {topbarThemes\r\n            .map((color, i) => (\r\n              <Tooltip key={i} title={color} placement=\"top\">\r\n                <div\r\n                  className=\"color\"\r\n                  onClick={() =>\r\n                    handleChange(\"layout1Settings.topbar.theme\", color)\r\n                  }\r\n                  style={{\r\n                    backgroundColor: themeColors[color].palette.primary.main\r\n                  }}\r\n                >\r\n                  {settings.layout1Settings.topbar.theme === color && (\r\n                    <Icon>done</Icon>\r\n                  )}\r\n                  <div className={settings.themes[color].palette.type}></div>\r\n                </div>\r\n              </Tooltip>\r\n            ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mx-12 mb-24\">\r\n        <FormControl component=\"fieldset\">\r\n          <FormLabel component=\"legend\">Sidebar mode</FormLabel>\r\n          <RadioGroup\r\n            aria-label=\"Sidebar\"\r\n            name=\"leftSidebar\"\r\n            value={settings.layout1Settings.leftSidebar.mode}\r\n            onChange={handleControlChange(\"layout1Settings.leftSidebar.mode\")}\r\n          >\r\n            <FormControlLabel value=\"full\" control={<Radio />} label=\"Full\" />\r\n            <FormControlLabel value=\"close\" control={<Radio />} label=\"Close\" />\r\n            <FormControlLabel\r\n              value=\"compact\"\r\n              control={<Radio />}\r\n              label=\"Compact\"\r\n            />\r\n          </RadioGroup>\r\n        </FormControl>\r\n      </div>\r\n\r\n      <div className=\"mb-32 mx-12\">\r\n        <div className=\"text-muted\">Sidebar background image</div>\r\n\r\n        <div className=\"layout-boxes\">\r\n          {sidebarBG.map((bg, i) => (\r\n            <BadgeSelected\r\n              key={i}\r\n              color=\"primary\"\r\n              className=\"layout-box\"\r\n              style={{ width: \"calc(25% - 8px)\" }}\r\n              badgeContent={<Icon>done</Icon>}\r\n              invisible={settings.layout1Settings.leftSidebar.bgImgURL !== bg}\r\n            >\r\n              <Paper\r\n                onClick={() =>\r\n                  handleChange(\"layout1Settings.leftSidebar.bgImgURL\", bg)\r\n                }\r\n                style={{ height: \"160px\" }}\r\n              >\r\n                <img src={bg} alt=\"\" />\r\n              </Paper>\r\n            </BadgeSelected>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mb-32 mx-12\">\r\n        <div className=\"text-muted\">Sidebar background opacity</div>\r\n        <Slider\r\n          value={settings.layout1Settings.leftSidebar.bgOpacity}\r\n          onChange={(event, value) =>\r\n            handleChange(\"layout1Settings.leftSidebar.bgOpacity\", value)\r\n          }\r\n          marks={true}\r\n          step={0.02}\r\n          max={1}\r\n          min={0.5}\r\n          valueLabelDisplay=\"auto\"\r\n          aria-labelledby=\"sidebar-bgOpacity\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"mx-12 mb-24\">\r\n        <FormControl component=\"fieldset\">\r\n          <FormLabel component=\"legend\">Topbar</FormLabel>\r\n          <FormGroup>\r\n            <FormControlLabel\r\n              control={\r\n                <Switch\r\n                  checked={get(settings.layout1Settings.topbar, \"show\")}\r\n                  onChange={handleControlChange(\"layout1Settings.topbar.show\")}\r\n                />\r\n              }\r\n              label=\"Show\"\r\n            />\r\n\r\n            <FormControlLabel\r\n              control={\r\n                <Switch\r\n                  checked={get(settings.layout1Settings.topbar, \"fixed\")}\r\n                  onChange={handleControlChange(\"layout1Settings.topbar.fixed\")}\r\n                />\r\n              }\r\n              label=\"Fixed\"\r\n            />\r\n          </FormGroup>\r\n        </FormControl>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Layout1Customizer;\r\n","import React, { Fragment } from \"react\";\r\nimport {\r\n  Tooltip,\r\n  Radio,\r\n  RadioGroup,\r\n  Icon,\r\n  FormControlLabel,\r\n  FormControl,\r\n  FormLabel\r\n} from \"@material-ui/core\";\r\nimport { themeColors } from \"../../EgretTheme/themeColors\";\r\n\r\nconst Layout2Customizer = ({ settings, handleChange, handleControlChange }) => {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"mb-16 mx-12\">\r\n        <div className=\"text-muted mb-4\">Topbar theme</div>\r\n        <div className=\"colors\">\r\n          {Object.keys(themeColors).map((color, i) => (\r\n            <Tooltip key={i} title={color} placement=\"top\">\r\n              <div\r\n                className=\"color\"\r\n                onClick={() =>\r\n                  handleChange(\"layout2Settings.topbar.theme\", color)\r\n                }\r\n                style={{\r\n                  backgroundColor: themeColors[color].palette.primary.main\r\n                }}\r\n              >\r\n                {settings.layout2Settings.topbar.theme === color && (\r\n                  <Icon>done</Icon>\r\n                )}\r\n                <div className={settings.themes[color].palette.type}></div>\r\n              </div>\r\n            </Tooltip>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mb-16 mx-12\">\r\n        <div className=\"text-muted mb-4\">Navbar theme</div>\r\n        <div className=\"colors\">\r\n          {Object.keys(themeColors).map((color, i) => (\r\n            <Tooltip key={i} title={color} placement=\"top\">\r\n              <div\r\n                className=\"color\"\r\n                onClick={() =>\r\n                  handleChange(\"layout2Settings.navbar.theme\", color)\r\n                }\r\n                style={{\r\n                  backgroundColor: themeColors[color].palette.primary.main\r\n                }}\r\n              >\r\n                {settings.layout2Settings.navbar.theme === color && (\r\n                  <Icon>done</Icon>\r\n                )}\r\n                <div className={settings.themes[color].palette.type}></div>\r\n              </div>\r\n            </Tooltip>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mx-12 mb-24\">\r\n        <FormControl component=\"fieldset\">\r\n          <FormLabel component=\"legend\">Layout mode</FormLabel>\r\n          <RadioGroup\r\n            aria-label=\"layout-mode\"\r\n            name=\"layoutMode\"\r\n            value={settings.layout2Settings.mode}\r\n            onChange={handleControlChange(\"layout2Settings.mode\")}\r\n          >\r\n            <FormControlLabel value=\"full\" control={<Radio />} label=\"Full\" />\r\n            <FormControlLabel\r\n              value=\"contained\"\r\n              control={<Radio />}\r\n              label=\"Contained\"\r\n            />\r\n            <FormControlLabel value=\"boxed\" control={<Radio />} label=\"Boxed\" />\r\n          </RadioGroup>\r\n        </FormControl>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Layout2Customizer;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setLayoutSettings,\r\n  setDefaultSettings\r\n} from \"app/redux/actions/LayoutActions\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport {\r\n  Icon,\r\n  IconButton,\r\n  FormGroup,\r\n  Tooltip,\r\n  Switch,\r\n  FormControlLabel,\r\n  FormControl,\r\n  FormLabel,\r\n  Paper,\r\n  withStyles,\r\n  MuiThemeProvider\r\n} from \"@material-ui/core\";\r\nimport Scrollbar from \"react-perfect-scrollbar\";\r\nimport { merge, get, set } from \"lodash\";\r\nimport Layout1Customizer from \"./Layout1Customizer\";\r\nimport Layout2Customizer from \"./Layout2Customizer\";\r\nimport { themeColors } from \"../../EgretTheme/themeColors\";\r\nimport BadgeSelected from \"./BadgeSelected\";\r\nimport { mainThemes, topbarThemes } from \"./customizerOptions\";\r\nimport ConstantList from \"../../../appConfig\";\r\nconst styles = theme => ({\r\n  root: {\r\n    \r\n  },\r\n  paper: {\r\n    display: \"inherit\"\r\n  }\r\n});\r\n\r\nclass EgretCustomizer extends Component {\r\n  state = {\r\n    open: false\r\n  };\r\n\r\n  updateSettings = newSettings => {\r\n    let { settings, setLayoutSettings, setDefaultSettings } = this.props;\r\n    let updatedSettings = merge({}, settings, newSettings);\r\n    setLayoutSettings(updatedSettings);\r\n    setDefaultSettings(updatedSettings);\r\n  };\r\n\r\n  selectLayout = activeLayout => {\r\n    this.updateSettings({ activeLayout });\r\n  };\r\n\r\n  handleChange = (name, value) => {\r\n    let { settings } = this.props;\r\n    let updatedSettings = set(settings, name, value);\r\n\r\n    this.updateSettings(updatedSettings);\r\n  };\r\n\r\n  handleControlChange = name => event => {\r\n    let controlValue =\r\n      event.target.type === \"checkbox\"\r\n        ? event.target.checked\r\n        : event.target.value;\r\n    this.handleChange(name, controlValue);\r\n  };\r\n\r\n  tooglePanel = () => {\r\n    this.setState({ open: !this.state.open });\r\n  };\r\n\r\n  render() {\r\n    let { settings, classes } = this.props;\r\n    let activeTheme = { ...settings.themes[settings.activeTheme] };\r\n    // console.log(activeTheme);\r\n\r\n    return (\r\n      <Fragment>\r\n        <Tooltip title=\"Theme Settings\" placement=\"left\">\r\n          <IconButton\r\n            size=\"small\"\r\n            aria-label=\"delete\"\r\n            className=\"my-12\"\r\n            onClick={this.tooglePanel}\r\n          >\r\n            <Icon className=\"spin\">settings</Icon>\r\n          </IconButton>\r\n        </Tooltip>\r\n\r\n        {this.state.open && (\r\n          <MuiThemeProvider theme={activeTheme}>\r\n            <div\r\n              className={`egret-customizer pb-8 ${classes.root}`}\r\n              style={{\r\n                backgroundColor: activeTheme.palette.background.default\r\n              }}\r\n            >\r\n              <div className=\"flex felx-row flex-middle p-16 mb-16 elevation-z6\" style={{minHeight: \"64px\"}}>\r\n                <Icon color=\"primary\">settings</Icon>\r\n                <h5 className=\"mb-0 ml-8\">Theme Settings</h5>\r\n                <IconButton\r\n                  onClick={this.tooglePanel}\r\n                  className=\"customizer-close\"\r\n                >\r\n                  <Icon>close</Icon>\r\n                </IconButton>\r\n              </div>\r\n              <Scrollbar options={{ suppressScrollX: true }} className=\"px-16\">\r\n                <div className=\"mt-8 mb-32 mx-12\">\r\n                  <div className=\"text-muted\">Layouts</div>\r\n\r\n                  <div className=\"layout-boxes\">\r\n                    <BadgeSelected\r\n                      color=\"secondary\"\r\n                      className=\"layout-box\"\r\n                      badgeContent={<Icon>done</Icon>}\r\n                      invisible={settings.activeLayout !== \"layout1\"}\r\n                    >\r\n                      <Paper onClick={() => this.selectLayout(\"layout1\")} elevation={4}>\r\n                        <img\r\n                          src= {ConstantList.ROOT_PATH+\"assets/images/screenshots/layout1-customizer.png\"}\r\n                          alt=\"\"\r\n                        />\r\n                      </Paper>\r\n                    </BadgeSelected>\r\n                    <BadgeSelected\r\n                      color=\"secondary\"\r\n                      className=\"layout-box\"\r\n                      badgeContent={<Icon>done</Icon>}\r\n                      invisible={settings.activeLayout !== \"layout2\"}\r\n                    >\r\n                      <Paper onClick={() => this.selectLayout(\"layout2\")} elevation={4}>\r\n                        <img\r\n                          src= {ConstantList.ROOT_PATH+\"assets/images/screenshots/layout2-customizer.png\"}\r\n                          alt=\"\"\r\n                        />\r\n                      </Paper>\r\n                    </BadgeSelected>\r\n                  </div>\r\n                </div>\r\n                {/* END LAYOUT */}\r\n\r\n                <div className=\"mb-16 mx-12\">\r\n                  <div className=\"text-muted mb-4\">Main theme</div>\r\n                  <div className=\"colors\">\r\n                    {mainThemes.map((color, i) => (\r\n                      <Tooltip key={i} title={color} placement=\"top\">\r\n                        <div\r\n                          className=\"color\"\r\n                          onClick={() =>\r\n                            this.updateSettings({ activeTheme: color })\r\n                          }\r\n                          style={{\r\n                            backgroundColor:\r\n                              themeColors[color].palette.primary.main\r\n                          }}\r\n                        >\r\n                          {settings.activeTheme === color && <Icon>done</Icon>}\r\n                          <div\r\n                            className={settings.themes[color].palette.type}\r\n                          ></div>\r\n                        </div>\r\n                      </Tooltip>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n\r\n                {settings.activeLayout === \"layout1\" && (\r\n                  <Layout1Customizer\r\n                    settings={settings}\r\n                    handleChange={this.handleChange}\r\n                    handleControlChange={this.handleControlChange}\r\n                  />\r\n                )}\r\n\r\n                {settings.activeLayout === \"layout2\" && (\r\n                  <Layout2Customizer\r\n                    settings={settings}\r\n                    handleChange={this.handleChange}\r\n                    handleControlChange={this.handleControlChange}\r\n                  />\r\n                )}\r\n\r\n                <div className=\"mx-12 mb-24\">\r\n                  <FormControl component=\"fieldset\">\r\n                    <FormLabel component=\"legend\">Footer</FormLabel>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Switch\r\n                            checked={get(settings.footer, \"show\")}\r\n                            onChange={this.handleControlChange(\"footer.show\")}\r\n                          />\r\n                        }\r\n                        label=\"Show\"\r\n                      />\r\n\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Switch\r\n                            checked={get(\r\n                              settings.layout1Settings.footer,\r\n                              \"fixed\"\r\n                            )}\r\n                            onChange={this.handleControlChange(\"footer.fixed\")}\r\n                          />\r\n                        }\r\n                        label=\"Fixed\"\r\n                      />\r\n                    </FormGroup>\r\n                  </FormControl>\r\n                </div>\r\n\r\n                <div className=\"mx-12 mb-24\">\r\n                  <FormControl component=\"fieldset\">\r\n                    <FormLabel component=\"legend\">Secondary sidebar</FormLabel>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Switch\r\n                            checked={get(settings.secondarySidebar, \"show\")}\r\n                            onChange={this.handleControlChange(\r\n                              \"secondarySidebar.show\"\r\n                            )}\r\n                          />\r\n                        }\r\n                        label=\"Show\"\r\n                      />\r\n                    </FormGroup>\r\n                  </FormControl>\r\n                </div>\r\n\r\n                <div className=\"mb-16 mx-12\">\r\n                  <div className=\"text-muted mb-4\">Secondary sidebar theme</div>\r\n                  <div className=\"colors\">\r\n                    {topbarThemes\r\n                    .map((color, i) => (\r\n                      <Tooltip key={i} title={color} placement=\"top\">\r\n                        <div\r\n                          className=\"color\"\r\n                          onClick={() =>\r\n                            this.handleChange(\"secondarySidebar.theme\", color)\r\n                          }\r\n                          style={{\r\n                            backgroundColor:\r\n                              themeColors[color].palette.primary.main\r\n                          }}\r\n                        >\r\n                          {settings.secondarySidebar.theme === color && (\r\n                            <Icon>done</Icon>\r\n                          )}\r\n                          <div\r\n                            className={settings.themes[color].palette.type}\r\n                          ></div>\r\n                        </div>\r\n                      </Tooltip>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"mb-16 mx-12\">\r\n                  <div className=\"text-muted mb-4\">Footer theme</div>\r\n                  <div className=\"colors\">\r\n                    {topbarThemes\r\n                    .map((color, i) => (\r\n                      <Tooltip key={i} title={color} placement=\"top\">\r\n                        <div\r\n                          className=\"color\"\r\n                          onClick={() =>\r\n                            this.handleChange(\"footer.theme\", color)\r\n                          }\r\n                          style={{\r\n                            backgroundColor:\r\n                              themeColors[color].palette.primary.main\r\n                          }}\r\n                        >\r\n                          {settings.footer.theme === color && <Icon>done</Icon>}\r\n                          <div\r\n                            className={settings.themes[color].palette.type}\r\n                          ></div>\r\n                        </div>\r\n                      </Tooltip>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </Scrollbar>\r\n            </div>\r\n          </MuiThemeProvider>\r\n        )}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  settings: state.layout.settings,\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  setDefaultSettings: PropTypes.func.isRequired\r\n});\r\n\r\nexport default withStyles(styles, { withTheme: true })(\r\n  connect(\r\n    mapStateToProps,\r\n    { setLayoutSettings, setDefaultSettings }\r\n  )(EgretCustomizer)\r\n);\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  MuiThemeProvider,\r\n  Badge,\r\n  Fab,\r\n  IconButton,\r\n  Icon\r\n} from \"@material-ui/core\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { classList, isMobile, debounce } from \"utils\";\r\nimport EgretCustomizer from \"./EgretCustomizer/EgretCustomizer\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport ShoppingCart from \"./ShoppingCart\";\r\n\r\nconst width = \"50px\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    position: \"fixed\",\r\n    height: \"100vh\",\r\n    width,\r\n    right: `-${width}`,\r\n    bottom: 0,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    boxShadow: theme.shadows[8],\r\n    zIndex: 98,\r\n    transition: \"all 0.15s ease\",\r\n    \"&.open\": {\r\n      right: 0,\r\n      \"& .toggle\": {\r\n        left: 0\r\n      }\r\n    },\r\n    \"& .toggle\": {\r\n      position: \"relative\",\r\n      left: \"-28px\",\r\n      bottom: \"20px\",\r\n      transition: \"all 0.15s ease\"\r\n    }\r\n  }\r\n});\r\n\r\nclass SecondarySidebar extends Component {\r\n  state = {\r\n    open: true\r\n  };\r\n  listenWindowResizeRef;\r\n\r\n  toggle = () => {\r\n    this.setState({ open: !this.state.open });\r\n  };\r\n\r\n  componentWillMount() {\r\n    this.setState({ open: !isMobile() });\r\n    if (window) {\r\n      this.listenWindowResizeRef = this.listenWindowResize();\r\n      // LISTEN WINDOW RESIZE\r\n      window.addEventListener(\"resize\", this.listenWindowResizeRef);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (window) {\r\n      window.removeEventListener(\"resize\", this.listenWindowResizeRef);\r\n    }\r\n  }\r\n\r\n  listenWindowResize = () => {\r\n    return debounce(() => {\r\n      this.setState({ open: !isMobile() });\r\n    }, 100);\r\n  };\r\n\r\n  render() {\r\n    let { settings, classes, theme } = this.props;\r\n    const secondarySidebarTheme =\r\n      settings.themes[settings.secondarySidebar.theme] || theme;\r\n\r\n    return (\r\n      <MuiThemeProvider theme={secondarySidebarTheme}>\r\n        {this.state.open && !isMobile() && (\r\n          <Helmet>\r\n            <style>\r\n              {`\r\n              .content-wrap, \r\n              .layout2.layout-contained, \r\n              .layout2.layout-full {\r\n                margin-right: ${width};\r\n              }\r\n              @media screen and (max-width: 959px) {\r\n                .toolbar-menu-wrap .menu-area {\r\n                  width: calc(100% - ${width});\r\n                }\r\n              }\r\n              .egret-customizer {\r\n                right: ${width};\r\n              }\r\n            `}\r\n            </style>\r\n          </Helmet>\r\n        )}\r\n\r\n        <div\r\n          className={\r\n            classes.root +\r\n            \" \" +\r\n            classList({\r\n              open: this.state.open,\r\n              \"secondary-sidebar\": true\r\n            })\r\n          }\r\n          style={{\r\n            backgroundColor: secondarySidebarTheme.palette.primary.main\r\n          }}\r\n        >\r\n          <span className=\"m-auto\"></span>\r\n\r\n          <EgretCustomizer />\r\n\r\n          <ShoppingCart/>\r\n\r\n          <IconButton size=\"small\" aria-label=\"delete\" className=\"my-12\">\r\n            <Icon>comments</Icon>\r\n          </IconButton>\r\n\r\n          {/* Toggle Button */}\r\n          <span className=\"m-auto\"></span>\r\n          <div className=\"toggle\">\r\n            {this.state.open && (\r\n              <IconButton\r\n                onClick={this.toggle}\r\n                size=\"small\"\r\n                aria-label=\"toggle\"\r\n              >\r\n                <Icon>arrow_right</Icon>\r\n              </IconButton>\r\n            )}\r\n            {!this.state.open && (\r\n              <Fab\r\n                variant=\"extended\"\r\n                size=\"small\"\r\n                color=\"primary\"\r\n                aria-label=\"add\"\r\n                className=\"pr-36\"\r\n                onClick={this.toggle}\r\n              >\r\n                <Icon>arrow_left</Icon>\r\n              </Fab>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  settings: state.layout.settings\r\n});\r\n\r\nexport default withStyles(styles, { withTheme: true })(\r\n  withRouter(\r\n    connect(\r\n      mapStateToProps,\r\n      {}\r\n    )(SecondarySidebar)\r\n  )\r\n);\r\n"],"sourceRoot":""}